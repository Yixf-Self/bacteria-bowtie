polyamines<-data.frame(tolower(polyamines[,1]))
colnames(polyamines)<-"V1"
polyamines<-polyamines[!duplicated(polyamines),]
polyamines<-read.table("polyamine-search-list",sep="\t",comment.char = "#")
polyamines<-data.frame(tolower(polyamines[,1]))
colnames(polyamines)<-"V1"
polyamines<-unique(polyamines)
just_poly_products<-merge(x=sum_by_product_name,by.x="product",y=polyamines,by.y="V1",all=F)
just_poly_genes<-merge(x=sum_by_gene_name,by.x="gene",y=polyamines,by.y="V1",all=F)
View(just_poly_products)
View(just_poly_genes)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
sum_by_product_name <- read.csv("sum_by_product_name.csv")
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
#for LPS pathway####
polyamines<-read.table("polyamine-search-list",sep="\t",comment.char = "#")
polyamines<-data.frame(tolower(polyamines[,1]))
colnames(polyamines)<-"V1"
polyamines<-unique(polyamines)
library("KEGGREST", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("KEGGgraph", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("KEGG.db", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
just_poly_products<-merge(x=sum_by_product_name,by.x="product",y=polyamines,by.y="V1",all=F)
polyamines<-data.frame(tolower(polyamines[,1]))
colnames(polyamines)<-"V1"
polyamines<-unique(polyamines)
just_poly_products<-merge(x=sum_by_product_name,by.x="product",y=polyamines,by.y="V1",all=F)
View(sum_by_product_name)
View(sum_by_gene_name)
colnames(sum_by_product_name)[1]<-"product"
View(sum_by_product_name)
colnames(sum_by_gene_name)[1]<-"gene"
polyamines<-read.table("polyamine-search-list",sep="\t",comment.char = "#")
polyamines<-data.frame(tolower(polyamines[,1]))
colnames(polyamines)<-"V1"
polyamines<-unique(polyamines)
just_poly_products<-merge(x=sum_by_product_name,by.x="product",y=polyamines,by.y="V1",all=F)
just_poly_genes<-merge(x=sum_by_gene_name,by.x="gene",y=polyamines,by.y="V1",all=F)
?keggGet
?keggFind
listDatabases()
keggFind("ko","1-pyrroline-5-carboxylate dehydrogenase")
keggFind("ko","1-pyrroline-5-carboxylate dehydrogenase")[1]
keggFind("ko","1-pyrroline-5-carboxylate dehydrogenase")[[1]]
keggFind("ko","1-pyrroline-5-carboxylate dehydrogenase")[,1]
dim(keggFind("ko","1-pyrroline-5-carboxylate dehydrogenase"))
results<-keggFind("ko","1-pyrroline-5-carboxylate dehydrogenase")
results
results[1]
results[2]
results[3]
results[1]
results[1,1]
results[1]
colnames(results[1])
results[1][1]
results[1]
results[1]->string
string
string[1]
typeof(results)
results[[1]]
description(results)
head(results)
table(results)
results
egrep('ko.*',results)
grep('ko.*',results)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(KEGGgraph)
library(KEGGREST)
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
#for LPS pathway####
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
lowercase_lps<-data.frame(tolower(lps_path[,1]))
lps_path<-lowercase_lps
colnames(lps_path)<-"V1"
just_lps_products<-merge(x=sum_by_product_name,by.x="product",y=lps_path,by.y="V1",all=F)
just_lps_genes<-merge(x=sum_by_gene_name,by.x="gene",y=lps_path,by.y="V1",all=F)
polyamines<-read.table("polyamine-search-list",sep="\t",comment.char = "#")
polyamines<-data.frame(tolower(polyamines[,1]))
colnames(polyamines)<-"V1"
polyamines<-unique(polyamines)
just_poly_products<-merge(x=sum_by_product_name,by.x="product",y=polyamines,by.y="V1",all=F)
just_poly_genes<-merge(x=sum_by_gene_name,by.x="gene",y=polyamines,by.y="V1",all=F)
mschaedleri <- read.csv("MschaedleriFeatures.csv")
mschaedleri_exp <- merge(mschaedleri,filtered_annotated,by.x="RefSeq.Locus.Tag",by.y="tracking_id",all=F)
View(filtered_annotated)
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
View(filtered_annotated)
View(sum_by_gene_name)
simple_gene_counts <- read.table("isoforms.FPKM_table",header = T, comment.char = "", strip.white = T, sep = "\t", quote = "", colClasses = c("character","numeric","numeric","numeric","numeric"))
colnames(simple_gene_counts)<-c("tracking_id","S1_FPM","S2_FPM","S3_FPM","S4_FPM")
simple_gene_counts$sum<-rowSums(simple_gene_counts[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")])
filtered<-simple_gene_counts[simple_gene_counts$sum!=0,]
annotation<-read.table("id_to_product.tab",header = F,sep = '\t',quote = "",as.is = T)
lowercase_annotation<-data.frame((annotation[,1]),tolower(annotation[,2]))
annotation<-lowercase_annotation
colnames(annotation)<-c("tracking_id","product_name")
gene_annotation<-read.table("id_to_gene.tab",header = F,sep = '\t',quote = "")
colnames(gene_annotation)<-c("tracking_id","gene")
filtered_annotated<-merge(filtered,annotation,by="tracking_id")
filtered_annotated<-merge(filtered_annotated,gene_annotation,by="tracking_id",all = F)
filtered_annotated<-filtered_annotated[order(filtered_annotated$sum,decreasing = T),]
sum_by_product_name<-rowsum(filtered_annotated[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")],group = filtered_annotated$product_name)
sum_by_gene_name<-rowsum(filtered_annotated[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")],group = filtered_annotated$gene)
sum_by_gene_name$gene<-tolower(row.names(sum_by_gene_name))
sum_by_product_name$product<-row.names(sum_by_product_name)
write.csv(sum_by_product_name,"sum_by_product_name.csv")
write.csv(sum_by_gene_name,"sum_by_gene_name.csv")
write.csv(filtered_annotated,"diff_exp_for_all_bact.csv")
mschaedleri <- read.csv("MschaedleriFeatures.csv")
mschaedleri_exp <- merge(mschaedleri,filtered_annotated,by.x="RefSeq.Locus.Tag",by.y="tracking_id",all=F)
mschaedleri_exp_vs_all_products <- merge(mschaedleri_exp,sum_by_product_name,by.x="product_name",by.y="X",all=F)
mschaedleri_exp_vs_all_products <- merge(mschaedleri_exp,sum_by_product_name,by.x="product_name",by.y="product",all=F)
write.csv(mschaedleri_exp_vs_all_products,"mschaedleri_contribution_to_set.csv")
View(sum_by_gene_name)
View(sum_by_product_name)
View(sum_by_gene_name)
View(sum_by_product_name)
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
sum_by_product_name <- read.csv("sum_by_product_name.csv")
View(sum_by_product_name)
colnames(sum_by_product_name)[1]<-"product"
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
#for LPS pathway####
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
lowercase_lps<-data.frame(tolower(lps_path[,1]))
lps_path<-lowercase_lps
colnames(lps_path)<-"V1"
just_lps_products<-merge(x=sum_by_product_name,by.x="product",y=lps_path,by.y="V1",all=F)
View(sum_by_product_name)
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_gene_name<-sum_by_gene_name[,1:5]
#for LPS pathway####
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
lowercase_lps<-data.frame(tolower(lps_path[,1]))
lps_path<-lowercase_lps
colnames(lps_path)<-"V1"
just_lps_products<-merge(x=sum_by_product_name,by.x="product",y=lps_path,by.y="V1",all=F)
just_lps_genes<-merge(x=sum_by_gene_name,by.x="gene",y=lps_path,by.y="V1",all=F)
View(sum_by_product_name)
View(lowercase_lps)
View(lps_path)
View(sum_by_gene_name)
View(mschaedleri_exp_vs_all_products)
View(sum_by_gene_name)
View(lowercase_lps)
View(lps_path)
View(just_lps_genes)
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
View(filtered_annotated)
?read.table
filtered_annotated <- filtered_annotated[,2:9]
View(filtered_annotated)
sum_by_product_name <- read.csv("sum_by_product_name.csv")
View(sum_by_product_name)
colnames(sum_by_product_name)[1]<-"product"
View(sum_by_product_name)
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
View(sum_by_gene_name)
View(sum_by_product_name)
#for LPS pathway####
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
lowercase_lps<-data.frame(tolower(lps_path[,1]))
lps_path<-lowercase_lps
colnames(lps_path)<-"V1"
rm(lowercase_lps)
just_lps_products<-merge(x=sum_by_product_name,by.x="product",y=lps_path,by.y="V1",all=F)
just_lps_genes<-merge(x=sum_by_gene_name,by.x="gene",y=lps_path,by.y="V1",all=F)
View(sum_by_gene_name)
View(lps_path)
View(sum_by_product_name)
View(filtered_annotated)
polyamines<-read.table("polyamine-search-list",sep="\t",comment.char = "#")
polyamines<-data.frame(tolower(polyamines[,1]))
colnames(polyamines)<-"V1"
polyamines<-unique(polyamines)
just_poly_products<-merge(x=sum_by_product_name,by.x="product",y=polyamines,by.y="V1",all=F)
just_poly_genes<-merge(x=sum_by_gene_name,by.x="gene",y=polyamines,by.y="V1",all=F)
sum_by_gene_name$gene
grep('lpxc',sum_by_gene_name)
grep('lpx*',sum_by_gene_name)
?match
uglyMerge <- function(df1, df2) {
## lower all strings to allow case-insensitive comparison
lowerNames1 <- tolower(df1[, 1]);
lowerNames2 <- tolower(df2[, 1]);
## split strings into single characters
names1 <- strsplit(lowerNames1, "");
names2 <- strsplit(lowerNames2, "");
## create the final dataframe
mergedDf <- data.frame(name1=as.character(df1[,1]), name2=NA,
number1=df1[,2], number2=NA, matches=0,
stringsAsFactors=FALSE);
## store names of dataframe2 (to remember which strings have no match)
toMerge <- df2[, 1];
for (i in seq(along=names1)) {
for (j in seq(along=names2)) {
## set minimal match to 4 or to string length
minMatch <- min(4, length(names2[[j]]));
## find single matches
matches <- names1[[i]] %in% names2[[j]];
## look for consecutive matches
r <- rle(matches);
## any matches found?
if (any(r$values)) {
## find max consecutive match
possibleMatch <- r$value == TRUE;
maxPos <- which(which.max(r$length[possibleMatch]) & possibleMatch)[1];
## store max conscutive match length
maxMatch <- r$length[maxPos];
## to remove FALSE-POSITIVES (e.g. CCC and kcn) find
## largest substring
start <- sum(r$length[0:(maxPos-1)]) + 1;
stop <- start + r$length[maxPos] - 1;
maxSubStr <- substr(lowerNames1[i], start, stop);
## all matching criteria fulfilled
isConsecutiveMatch <- maxMatch >= minMatch &&
grepl(pattern=maxSubStr, x=lowerNames2[j], fixed=TRUE) &&
nchar(maxSubStr) > 0;
if (isConsecutiveMatch) {
## merging
mergedDf[i, "matches"] <- maxMatch
mergedDf[i, "name2"] <- as.character(df2[j, 1]);
mergedDf[i, "number2"] <- df2[j, 2];
## don't append this row to mergedDf because already merged
toMerge[j] <- NA;
## stop inner for loop here to avoid possible second match
break;
}
## append not matched rows to mergedDf
toMerge <- which(df2[, 1] == toMerge);
df2 <- data.frame(name1=NA, name2=as.character(df2[toMerge, 1]),
number1=NA, number2=df2[toMerge, 2], matches=0,
stringsAsFactors=FALSE);
mergedDf <- rbind(mergedDf, df2);
return (mergedDf);
}
View(lps_path)
lps_genes<-lps_path[34:96,]
lps_products<-lps_path[1:34,]
lps_genes<-data.frame(genes=lps_path[34:96,])
lps_products<-data.fram(product=lps_path[1:34,])
lps_products<-data.frame(product=lps_path[1:34,])
just_lps_products<-uglyMerge(sum_by_product_name,lps_products)
setwd("/Users/Scott/tophat-bacteria/scripts/R-interactive")
source("/Users/Scott/tophat-bacteria/scripts/R-interactive/uglyMerge.R")
just_lps_products<-uglyMerge(sum_by_product_name,lps_products)
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
#for LPS pathway####
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
just_lps_products<-merge(x=sum_by_product_name,y=lps_products,by="product",all=F)
just_lps_genes<-merge(x=sum_by_gene_name,y=lps_genes,by="gene",all=F)
lps_genes<-data.frame(gene=lps_path[34:96,])
just_lps_genes<-merge(x=sum_by_gene_name,y=lps_genes,by="gene",all=F)
View(just_lps_genes)
polyamines<-read.table("polyamine-search-list",sep="\t",comment.char = "#")
polyamines<-data.frame(tolower(polyamines[,1]))
colnames(polyamines)<-"V1"
polyamines<-unique(polyamines)
View(polyamines)
poly_product<-data.frame(product=polyamines$V1[1:88])
poly_genes<-data.frame(gene=polyamines$V1[89:203])
just_poly_products<-merge(x=sum_by_product_name,y=poly_product,all=F)
just_poly_genes<-merge(x=sum_by_gene_name,y=poly_genes,all=F)
View(just_poly_genes)
View(just_poly_products)
poly_annot<-read.table("polyamine-search-list",header = T,sep = ";")
View(poly_annot)
poly_annot<-read.table("polyamine_list_annotation",header = T,sep = ";")
View(poly_annot)
?read.table
poly_annot<-read.table("polyamine_list_annotation",header = T,sep = ";",strip.white = T)
View(poly_annot)
poly_annot<-read.table("polyamine_list_annotation",header = T,sep = ";",strip.white = T)
poly_annot$product <- tolower(poly_annot$product)
just_poly_products_annot <- merge(x=poly_annot,y=just_poly_products)
View(just_poly_products_annot)
?write.csv
write.csv(just_poly_products_annot,"poly_products_annotated.csv")
View(filtered_annotated)
lps_with_tracking_id <- merge(x=filtered_annotated,y=lps_products)
View(filtered_annotated)
View(lps_products)
lps_with_tracking_id <- merge(x=filtered_annotated,y=lps_products,by.x="prodcut_name",by.y="product",all=F)
lps_with_tracking_id <- merge(x=filtered_annotated,y=lps_products,by.x="product_name",by.y="product",all=F)
View(lps_with_tracking_id)
write.csv(lps_with_tracking_id,"temp.csv")
source('~/.active-rstudio-document', echo=TRUE)
View(just_poly_products)
View(just_poly_products_annot)
just_poly_from_excel <- read.csv("poly_products_for_kegg_figure.csv",header=T)
View(just_poly_from_excel)
heatmap(just_poly_from_excel)
row.names(just_poly_from_excel)<-just_poly_from_excel$id_on_kegg
just_poly_from_excel <- data.matrix(just_poly_from_excel[,3:5])
heatmap(just_poly_from_excel)
heatmap(just_poly_from_exce, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10)l)
heatmap(just_poly_from_exce, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
heatmap(just_poly_from_excel, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
names(just_poly_from_excel)
just_poly_from_excel
?heatmap
ncol(just_poly_from_excel)
nrows(just_poly_from_excel)
nrow(just_poly_from_excel)
x=just_poly_from_excel
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(20,10))
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(10,10))
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
par()
par(mar=*)
par((mar=*))
?par
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
oldPar <- par()
oldPar <- par(no.readonly = T)
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="row", margins=c(5,10))
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
?heatmap
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10), cexCol=1)
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(10,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
library("RColorBrewer", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(RColorBrewer)
brewer.pal
brewer.pal()
heatmap(x, Rowv=NA, Colv=NA, col = brewer.pal(3,"YlGnBu"), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = brewer.pal(12,"YlGnBu"), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = brewer.pal(9,"YlGnBu"), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
?cm.color
??cm.color
demo.pal <-
function(n, border = if (n < 32) "light gray" else NA,
main = paste("color palettes;  n=", n),
ch.col = c("rainbow(n, start=.7, end=.1)", "heat.colors(n)",
"terrain.colors(n)", "topo.colors(n)",
"cm.colors(n)"))
{
nt <- length(ch.col)
i <- 1:n; j <- n / nt; d <- j/6; dy <- 2*d
plot(i, i+d, type = "n", yaxt = "n", ylab = "", main = main)
for (k in 1:nt) {
rect(i-.5, (k-1)*j+ dy, i+.4, k*j,
col = eval(parse(text = ch.col[k])), border = border)
text(2*j,  k * j + dy/4, ch.col[k])
}
n <- if(.Device == "postscript") 64 else 16
# Since for screen, larger n may give color allocation problem
demo.pal(n)
heatmap(x, Rowv=NA, Colv=NA, col = colorRamp(c("Blue","Yellow")), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
?colorRamp
colorRamp(c("Blue","Yellow"))
colorRampPalette(c("Blue","Yellow"))
heatmap(x, Rowv=NA, Colv=NA, col = colorRampPalette(c("Blue","Yellow")), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
myColors=colorRampPalette(c("Blue","Yellow"))
?myColors
myColors
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
max(x)
min(x)
View(just_poly_products_annot)
View(lps_with_tracking_id)
View(poly_annot)
lps_annot=read.table("LPS_list_annotation",header = T,sep = ";",strip.white = T)
lps_annot=read.table("LPS_list_annotation",header = T,sep = ";",strip.white = T,quote = "")
View(lps_annot)
poly_annot$product <- tolower(poly_annot$product)
View(just_poly_products)
View(just_lps_products)
just_lps_products_annot <- merge(x=lps_annot,y=just_lps_products,all.x=F,all.y=T)
View(just_lps_products_annot)
just_lps_products_annot <- merge(x=lps_annot,y=just_lps_products,all.x=F,all.y=T)
View(just_lps_products_annot)
View(lps_annot)
View(just_lps_products)
just_lps_products_annot <- merge(x=lps_annot,y=just_lps_products,by="product",all.x=F,all.y=T)
View(just_lps_products_annot)
lps_annot=read.table("LPS_list_annotation",header = T,sep = ";",strip.white = T,quote = "")
lps_annot$product <- tolower(lps_annot$product)
just_lps_products_annot <- merge(x=lps_annot,y=just_lps_products,by="product",all.x=F,all.y=T)
View(just_lps_products_annot)
write.csv(just_lps_products_annot,"just_lps_products_annot.csv")
just_lps_from_excel <- read.csv("for_lps_heatmap.csv",header=T)
just_lps_from_excel <- read.csv("for_lps_heatmap.csv",header=T,quote = "\'\"")
just_lps_from_excel <- read.csv("for_lps_heatmap.csv",header=T,quote = """)
just_lps_from_excel <- read.csv("for_lps_heatmap.csv",header=T,quote = "\"")
just_lps_from_excel <- read.delim("for_lps_heatmap.txt",header=T)
just_lps_from_excel <- read.delim("for_lps_heatmap.txt")
?read.table
just_lps_from_excel <- read.delim("for_lps_heatmap.txt",header = T)
View(just_lps_from_excel)
row.names(just_lps_from_excel)<-just_lps_from_excel$ecnumber
View(just_lps_from_excel)
just_lps_from_excel <- data.matrix(just_lps_from_excel[,4:6])
x=just_lps_from_excel
oldPar <- par(no.readonly = T)
myColors=colorRampPalette(c("Blue","Yellow"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
View(just_lps_from_excel)
just_lps_from_excel <- read.delim("for_lps_heatmap.txt",header = T)
row.names(just_lps_from_excel)<-just_lps_from_excel$ecnumber
just_lps_from_excel <- just_lps_from_excel[ord(just_lps_from_excel$cancer),]
just_lps_from_excel <- just_lps_from_excel[order(just_lps_from_excel$cancer),]
View(just_lps_from_excel)
just_lps_from_excel <- data.matrix(just_lps_from_excel[,4:6])
x=just_lps_from_excel
oldPar <- par(no.readonly = T)
myColors=colorRampPalette(c("Blue","Yellow"))
?heatmap
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255), scale="row", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
View(just_poly_from_excel)
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255), margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
x=just_poly_from_excel
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="row",margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none",margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="row",margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
x=just_lps_from_excel
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255), margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="row", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
x=just_poly_from_excel
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="row",margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none",margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
x=just_lps_from_excel
oldPar <- par(no.readonly = T)
myColors=colorRampPalette(c("Blue","Yellow"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
x=just_lps_from_excel
oldPar <- par(no.readonly = T)
myColors=colorRampPalette(c("Blue","Yellow"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
just_lps_from_excel <- read.delim("for_lps_heatmap.txt",header = T)
row.names(just_lps_from_excel)<-just_lps_from_excel$gene
just_lps_from_excel <- data.matrix(just_lps_from_excel[,4:6])
x=just_lps_from_excel
oldPar <- par(no.readonly = T)
myColors=colorRampPalette(c("Blue","Yellow"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
just_lps_from_excel <- read.delim("for_lps_heatmap.txt",header = T)
row.names(just_lps_from_excel)<-just_lps_from_excel$gene
just_lps_from_excel <- just_lps_from_excel[order(just_lps_from_excel$cancer),]
just_lps_from_excel <- data.matrix(just_lps_from_excel[,4:6])
x=just_lps_from_excel
oldPar <- par(no.readonly = T)
myColors=colorRampPalette(c("Blue","Yellow"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
citation()
source('~/.active-rstudio-document')
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
install.packages(c("ape", "backports", "base64", "BBmisc", "checkmate", "cluster", "codetools", "curl", "DBI", "devtools", "digest", "evaluate", "fastcluster", "foreign", "formatR", "futile.logger", "git2r", "highr", "Hmisc", "httr", "irlba", "jsonlite", "knitr", "lambda.r", "lattice", "manipulate", "Matrix", "matrixStats", "mgcv", "mime", "openssl", "permute", "plotrix", "plyr", "R6", "Rcpp", "RcppArmadillo", "rmarkdown", "rstudioapi", "rversions", "stringi", "stringr", "survival", "vegan", "VennDiagram", "VGAM", "withr", "xml2"))
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
#probably don't need these yet
#library(KEGGgraph)
#library(KEGGREST)
#this might work later if I really wanted to work at it
#but too much work for now
#source("/Users/Scott/tophat-bacteria/scripts/R-interactive/uglyMerge.R")
#setup####
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
#for m schaedleri####
mschaedleri <- read.csv("MschaedleriFeatures.csv")
mschaedleri_exp <- merge(mschaedleri,filtered_annotated,by.x="RefSeq.Locus.Tag",by.y="tracking_id",all=F)
mschaedleri_exp_vs_all_products <- merge(mschaedleri_exp,sum_by_product_name,by.x="product_name",by.y="product",all=F)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
poly_annot<-read.table("polyamine_list_annotation",header = T,sep = ";",strip.white = T)
poly_annot$product <- tolower(poly_annot$product)
just_poly_products_annot <- merge(x=poly_annot,y=just_poly_products)
polyamines<-read.table("polyamine-search-list",sep="\t",comment.char = "#")
polyamines<-data.frame(tolower(polyamines[,1]))
colnames(polyamines)<-"V1"
polyamines<-unique(polyamines)
poly_product<-data.frame(product=polyamines$V1[1:88])
poly_genes<-data.frame(gene=polyamines$V1[89:203])
just_poly_products<-merge(x=sum_by_product_name,y=poly_product,all=F)
just_poly_genes<-merge(x=sum_by_gene_name,y=poly_genes,all=F)
#getting more annotation####
poly_annot<-read.table("polyamine_list_annotation",header = T,sep = ";",strip.white = T)
poly_annot$product <- tolower(poly_annot$product)
just_poly_products_annot <- merge(x=poly_annot,y=just_poly_products)
