lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
just_lps_products<-merge(x=sum_by_product_name,y=lps_products,by="product",all=F)
just_lps_genes<-merge(x=sum_by_gene_name,y=lps_genes,by="gene",all=F)
lps_genes<-data.frame(gene=lps_path[34:96,])
just_lps_genes<-merge(x=sum_by_gene_name,y=lps_genes,by="gene",all=F)
View(just_lps_genes)
polyamines<-read.table("polyamine-search-list",sep="\t",comment.char = "#")
polyamines<-data.frame(tolower(polyamines[,1]))
colnames(polyamines)<-"V1"
polyamines<-unique(polyamines)
View(polyamines)
poly_product<-data.frame(product=polyamines$V1[1:88])
poly_genes<-data.frame(gene=polyamines$V1[89:203])
just_poly_products<-merge(x=sum_by_product_name,y=poly_product,all=F)
just_poly_genes<-merge(x=sum_by_gene_name,y=poly_genes,all=F)
View(just_poly_genes)
View(just_poly_products)
poly_annot<-read.table("polyamine-search-list",header = T,sep = ";")
View(poly_annot)
poly_annot<-read.table("polyamine_list_annotation",header = T,sep = ";")
View(poly_annot)
?read.table
poly_annot<-read.table("polyamine_list_annotation",header = T,sep = ";",strip.white = T)
View(poly_annot)
poly_annot<-read.table("polyamine_list_annotation",header = T,sep = ";",strip.white = T)
poly_annot$product <- tolower(poly_annot$product)
just_poly_products_annot <- merge(x=poly_annot,y=just_poly_products)
View(just_poly_products_annot)
?write.csv
write.csv(just_poly_products_annot,"poly_products_annotated.csv")
View(filtered_annotated)
lps_with_tracking_id <- merge(x=filtered_annotated,y=lps_products)
View(filtered_annotated)
View(lps_products)
lps_with_tracking_id <- merge(x=filtered_annotated,y=lps_products,by.x="prodcut_name",by.y="product",all=F)
lps_with_tracking_id <- merge(x=filtered_annotated,y=lps_products,by.x="product_name",by.y="product",all=F)
View(lps_with_tracking_id)
write.csv(lps_with_tracking_id,"temp.csv")
source('~/.active-rstudio-document', echo=TRUE)
View(just_poly_products)
View(just_poly_products_annot)
just_poly_from_excel <- read.csv("poly_products_for_kegg_figure.csv",header=T)
View(just_poly_from_excel)
heatmap(just_poly_from_excel)
row.names(just_poly_from_excel)<-just_poly_from_excel$id_on_kegg
just_poly_from_excel <- data.matrix(just_poly_from_excel[,3:5])
heatmap(just_poly_from_excel)
heatmap(just_poly_from_exce, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10)l)
heatmap(just_poly_from_exce, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
heatmap(just_poly_from_excel, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
names(just_poly_from_excel)
just_poly_from_excel
?heatmap
ncol(just_poly_from_excel)
nrows(just_poly_from_excel)
nrow(just_poly_from_excel)
x=just_poly_from_excel
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(20,10))
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(10,10))
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
par()
par(mar=*)
par((mar=*))
?par
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
oldPar <- par()
oldPar <- par(no.readonly = T)
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="row", margins=c(5,10))
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10))
?heatmap
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10), cexCol=1)
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,10), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(10,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = cm.colors(256), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
library("RColorBrewer", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(RColorBrewer)
brewer.pal
brewer.pal()
heatmap(x, Rowv=NA, Colv=NA, col = brewer.pal(3,"YlGnBu"), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = brewer.pal(12,"YlGnBu"), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = brewer.pal(9,"YlGnBu"), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
?cm.color
??cm.color
demo.pal <-
function(n, border = if (n < 32) "light gray" else NA,
main = paste("color palettes;  n=", n),
ch.col = c("rainbow(n, start=.7, end=.1)", "heat.colors(n)",
"terrain.colors(n)", "topo.colors(n)",
"cm.colors(n)"))
{
nt <- length(ch.col)
i <- 1:n; j <- n / nt; d <- j/6; dy <- 2*d
plot(i, i+d, type = "n", yaxt = "n", ylab = "", main = main)
for (k in 1:nt) {
rect(i-.5, (k-1)*j+ dy, i+.4, k*j,
col = eval(parse(text = ch.col[k])), border = border)
text(2*j,  k * j + dy/4, ch.col[k])
}
n <- if(.Device == "postscript") 64 else 16
# Since for screen, larger n may give color allocation problem
demo.pal(n)
heatmap(x, Rowv=NA, Colv=NA, col = colorRamp(c("Blue","Yellow")), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
?colorRamp
colorRamp(c("Blue","Yellow"))
colorRampPalette(c("Blue","Yellow"))
heatmap(x, Rowv=NA, Colv=NA, col = colorRampPalette(c("Blue","Yellow")), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
myColors=colorRampPalette(c("Blue","Yellow"))
?myColors
myColors
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
max(x)
min(x)
View(just_poly_products_annot)
View(lps_with_tracking_id)
View(poly_annot)
lps_annot=read.table("LPS_list_annotation",header = T,sep = ";",strip.white = T)
lps_annot=read.table("LPS_list_annotation",header = T,sep = ";",strip.white = T,quote = "")
View(lps_annot)
poly_annot$product <- tolower(poly_annot$product)
View(just_poly_products)
View(just_lps_products)
just_lps_products_annot <- merge(x=lps_annot,y=just_lps_products,all.x=F,all.y=T)
View(just_lps_products_annot)
just_lps_products_annot <- merge(x=lps_annot,y=just_lps_products,all.x=F,all.y=T)
View(just_lps_products_annot)
View(lps_annot)
View(just_lps_products)
just_lps_products_annot <- merge(x=lps_annot,y=just_lps_products,by="product",all.x=F,all.y=T)
View(just_lps_products_annot)
lps_annot=read.table("LPS_list_annotation",header = T,sep = ";",strip.white = T,quote = "")
lps_annot$product <- tolower(lps_annot$product)
just_lps_products_annot <- merge(x=lps_annot,y=just_lps_products,by="product",all.x=F,all.y=T)
View(just_lps_products_annot)
write.csv(just_lps_products_annot,"just_lps_products_annot.csv")
just_lps_from_excel <- read.csv("for_lps_heatmap.csv",header=T)
just_lps_from_excel <- read.csv("for_lps_heatmap.csv",header=T,quote = "\'\"")
just_lps_from_excel <- read.csv("for_lps_heatmap.csv",header=T,quote = """)
just_lps_from_excel <- read.csv("for_lps_heatmap.csv",header=T,quote = "\"")
just_lps_from_excel <- read.delim("for_lps_heatmap.txt",header=T)
just_lps_from_excel <- read.delim("for_lps_heatmap.txt")
?read.table
just_lps_from_excel <- read.delim("for_lps_heatmap.txt",header = T)
View(just_lps_from_excel)
row.names(just_lps_from_excel)<-just_lps_from_excel$ecnumber
View(just_lps_from_excel)
just_lps_from_excel <- data.matrix(just_lps_from_excel[,4:6])
x=just_lps_from_excel
oldPar <- par(no.readonly = T)
myColors=colorRampPalette(c("Blue","Yellow"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
View(just_lps_from_excel)
just_lps_from_excel <- read.delim("for_lps_heatmap.txt",header = T)
row.names(just_lps_from_excel)<-just_lps_from_excel$ecnumber
just_lps_from_excel <- just_lps_from_excel[ord(just_lps_from_excel$cancer),]
just_lps_from_excel <- just_lps_from_excel[order(just_lps_from_excel$cancer),]
View(just_lps_from_excel)
just_lps_from_excel <- data.matrix(just_lps_from_excel[,4:6])
x=just_lps_from_excel
oldPar <- par(no.readonly = T)
myColors=colorRampPalette(c("Blue","Yellow"))
?heatmap
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255), scale="column", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255), scale="row", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
View(just_poly_from_excel)
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255), margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
x=just_poly_from_excel
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="row",margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none",margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="row",margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
x=just_lps_from_excel
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255), margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="row", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
x=just_poly_from_excel
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="row",margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none",margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
x=just_lps_from_excel
oldPar <- par(no.readonly = T)
myColors=colorRampPalette(c("Blue","Yellow"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
x=just_lps_from_excel
oldPar <- par(no.readonly = T)
myColors=colorRampPalette(c("Blue","Yellow"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
just_lps_from_excel <- read.delim("for_lps_heatmap.txt",header = T)
row.names(just_lps_from_excel)<-just_lps_from_excel$gene
just_lps_from_excel <- data.matrix(just_lps_from_excel[,4:6])
x=just_lps_from_excel
oldPar <- par(no.readonly = T)
myColors=colorRampPalette(c("Blue","Yellow"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
just_lps_from_excel <- read.delim("for_lps_heatmap.txt",header = T)
row.names(just_lps_from_excel)<-just_lps_from_excel$gene
just_lps_from_excel <- just_lps_from_excel[order(just_lps_from_excel$cancer),]
just_lps_from_excel <- data.matrix(just_lps_from_excel[,4:6])
x=just_lps_from_excel
oldPar <- par(no.readonly = T)
myColors=colorRampPalette(c("Blue","Yellow"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
citation()
source('~/.active-rstudio-document')
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
install.packages(c("ape", "backports", "base64", "BBmisc", "checkmate", "cluster", "codetools", "curl", "DBI", "devtools", "digest", "evaluate", "fastcluster", "foreign", "formatR", "futile.logger", "git2r", "highr", "Hmisc", "httr", "irlba", "jsonlite", "knitr", "lambda.r", "lattice", "manipulate", "Matrix", "matrixStats", "mgcv", "mime", "openssl", "permute", "plotrix", "plyr", "R6", "Rcpp", "RcppArmadillo", "rmarkdown", "rstudioapi", "rversions", "stringi", "stringr", "survival", "vegan", "VennDiagram", "VGAM", "withr", "xml2"))
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
#probably don't need these yet
#library(KEGGgraph)
#library(KEGGREST)
#this might work later if I really wanted to work at it
#but too much work for now
#source("/Users/Scott/tophat-bacteria/scripts/R-interactive/uglyMerge.R")
#setup####
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
#for m schaedleri####
mschaedleri <- read.csv("MschaedleriFeatures.csv")
mschaedleri_exp <- merge(mschaedleri,filtered_annotated,by.x="RefSeq.Locus.Tag",by.y="tracking_id",all=F)
mschaedleri_exp_vs_all_products <- merge(mschaedleri_exp,sum_by_product_name,by.x="product_name",by.y="product",all=F)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
poly_annot<-read.table("polyamine_list_annotation",header = T,sep = ";",strip.white = T)
poly_annot$product <- tolower(poly_annot$product)
just_poly_products_annot <- merge(x=poly_annot,y=just_poly_products)
polyamines<-read.table("polyamine-search-list",sep="\t",comment.char = "#")
polyamines<-data.frame(tolower(polyamines[,1]))
colnames(polyamines)<-"V1"
polyamines<-unique(polyamines)
poly_product<-data.frame(product=polyamines$V1[1:88])
poly_genes<-data.frame(gene=polyamines$V1[89:203])
just_poly_products<-merge(x=sum_by_product_name,y=poly_product,all=F)
just_poly_genes<-merge(x=sum_by_gene_name,y=poly_genes,all=F)
#getting more annotation####
poly_annot<-read.table("polyamine_list_annotation",header = T,sep = ";",strip.white = T)
poly_annot$product <- tolower(poly_annot$product)
just_poly_products_annot <- merge(x=poly_annot,y=just_poly_products)
source('~/tophat-bacteria/scripts/R-interactive/pathway_mapping_forcuffnorm.R')
butanoate_annot=read.table("butanoate_list_annotation",header = T,sep = ";",strip.white = T,quote = "")
View(butanoate_annot)
butanoate_path<-butanoate_annot$product
lowercase_butanoate<-data.frame(tolower(butanoate_path[,1]))
butanoate_path<-data.frame(butanoate_annot$product)
lowercase_butanoate<-data.frame(tolower(butanoate_path[,1]))
butanoate_path<-lowercase_butanoate
colnames(butanoate_path)<-"V1"
rm(lowercase_butanoate)
just_butanoate_products<-merge(x=sum_by_product_name,y=butanoate_path,by="product",all=F)
just_butanoate_products<-merge(x=sum_by_product_name,y=butanoate_path,by.x="product",by.y="V1",all=F)
View(just_butanoate_products)
butanoate_path<-data.frame(unique(butanoate_annot$product))
lowercase_butanoate<-data.frame(tolower(butanoate_path[,1]))
butanoate_path<-lowercase_butanoate
colnames(butanoate_path)<-"V1"
rm(lowercase_butanoate)
just_butanoate_products<-merge(x=sum_by_product_name,y=butanoate_path,by.x="product",by.y="V1",all=F)
View(just_butanoate_products)
View(butanoate_annot)
View(just_butanoate_products)
just_butanoate_products_annot <- merge(x=butanoate_annot,y=just_butanoate_products,by="product",all.x=F,all.y=T)
View(just_butanoate_products_annot)
write.csv(just_butanoate_products_annot,"just_butanoate_products_annot.csv")
butanoate_annot$product <- tolower(butanoate_annot$product)
just_butanoate_products_annot <- merge(x=butanoate_annot,y=just_butanoate_products,by="product",all.x=F,all.y=T)
write.csv(just_butanoate_products_annot,"just_butanoate_products_annot.csv")
just_butanoate_from_excel <- read.delim("for_butanoate_heatmap.txt",header = T)
row.names(just_butanoate_from_excel)<-just_butanoate_from_excel$ecnumber
just_butanoate_from_excel <- read.delim("for_butanoate_heatmap.txt",header = T)
row.names(just_butanoate_from_excel)<-just_butanoate_from_excel$ecnumber
just_butanoate_from_excel <- just_butanoate_from_excel[order(just_butanoate_from_excel$cancer),]
just_butanoate_from_excel <- just_butanoate_from_excel[order(just_butanoate_from_excel$Combined),]
just_butanoate_from_excel <- data.matrix(just_butanoate_from_excel[,4:6])
x=just_butanoate_from_excel
oldPar <- par(no.readonly = T)
myColors=colorRampPalette(c("Blue","Yellow"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Combined", "H. hepaticus","SMAD3-KO"))
View(just_butanoate_from_excel)
View(just_lps_from_excel)
View(just_poly_from_excel)
View(just_butanoate_from_excel)
just_butanoate_from_excel <- read.delim("for_butanoate_heatmap.txt",header = T)
row.names(just_butanoate_from_excel)<-just_butanoate_from_excel$ecnumber
just_butanoate_from_excel <- just_butanoate_from_excel[order(just_butanoate_from_excel$Combined),]
just_butanoate_from_excel <- data.matrix(just_butanoate_from_excel[,4:6])
x=just_butanoate_from_excel
oldPar <- par(no.readonly = T)
myColors=colorRampPalette(c("Blue","Yellow"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Combined", "H. hepaticus","SMAD3-KO"))
just_butanoate_from_excel <- read.delim("for_butanoate_heatmap.txt",header = T)
row.names(just_butanoate_from_excel)<-just_butanoate_from_excel$gene
just_butanoate_from_excel <- just_butanoate_from_excel[order(just_butanoate_from_excel$Combined),]
just_butanoate_from_excel <- data.matrix(just_butanoate_from_excel[,4:6])
x=just_butanoate_from_excel
oldPar <- par(no.readonly = T)
myColors=colorRampPalette(c("Blue","Yellow"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Combined", "H. hepaticus","SMAD3-KO"))
View(just_butanoate_from_excel)
View(just_lps_products_annot)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
tlr4 <- read.delim("tlr4-pcr-data.tab")
View(tlr4)
Loblolly[1:10,]
wide <- reshape(Loblolly,
v.names = "height",
timevar = "age",
idvar = "Seed",
direction = "wide")
wide
wide$h0.3 <- wide$height.3
wide$h3.5 <- wide$height.5 - wide$height.3
wide$h5.10 <- wide$height.10 - wide$height.5
wide$h10.15 <- wide$height.15 - wide$height.10
wide$h15.20 <- wide$height.20 - wide$height.15
wide$h20.25 <- wide$height.25 - wide$height.20
View(wide)
library(RColorBrewer)
sequential <- brewer.pal(6, "BuGn")
barplot(t(wide[,8:13]),
names.arg = wide$Seed, # x-axis labels
cex.names = 0.7, # makes x-axis labels small enough to show all
col = sequential, # colors
xlab = "Seed Source",
ylab = "Height, Feet",
xlim = c(0,20), # these two lines allow space for the legend
width = 1) # these two lines allow space for the legend
legend("bottomright",
legend = c("20-25", "15-20", "10-15", "5-10", "3-5", "0-3"), #in order from top to bottom
fill = sequential[6:1], # 6:1 reorders so legend order matches graph
title = "Years")
library(RColorBrewer)
sequential <- brewer.pal(6, "BuGn")
Loblolly[1:10,]
wide <- reshape(Loblolly,
v.names = "height",
timevar = "age",
idvar = "Seed",
direction = "wide")
wide[1:5,]
wide$h0.3 <- wide$height.3
wide$h3.5 <- wide$height.5 - wide$height.3
wide$h5.10 <- wide$height.10 - wide$height.5
wide$h10.15 <- wide$height.15 - wide$height.10
wide$h15.20 <- wide$height.20 - wide$height.15
wide$h20.25 <- wide$height.25 - wide$height.20
barplot(t(wide[,8:13]),
names.arg = wide$Seed, # x-axis labels
cex.names = 0.7, # makes x-axis labels small enough to show all
col = sequential, # colors
xlab = "Seed Source",
ylab = "Height, Feet",
xlim = c(0,20), # these two lines allow space for the legend
width = 1) # these two lines allow space for the legend
legend("bottomright",
legend = c("20-25", "15-20", "10-15", "5-10", "3-5", "0-3"), #in order from top to bottom
fill = sequential[6:1], # 6:1 reorders so legend order matches graph
title = "Years")
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
lowercase_lps<-data.frame(tolower(lps_path[,1]))
lps_path<-lowercase_lps
colnames(lps_path)<-"V1"
rm(lowercase_lps)
lps_products<-data.frame(product=lps_path[1:34,])
lps_genes<-data.frame(gene=lps_path[34:96,])
just_lps_products<-merge(x=filtered_annotated,y=lps_products,by="product",all=F)
just_lps_products<-merge(x=filtered_annotated,y=lps_products,by.x="product_name",by.y="product",all=F)
View(just_lps_products)
just_lps_genes<-merge(x=filtered_annotated,y=lps_genes,by="gene",all=F)
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
lps_genes<-data.frame(gene=lps_path[34:96,])
just_lps_genes<-merge(x=filtered_annotated,y=lps_genes,by="gene",all=F)
View(just_lps_genes)
just_lps_products$tracking_id
write.csv(x = just_lps_products$tracking_id, file = "temp.csv",row.names = F,quote = F,col.names = F)
write.csv(x = just_lps_products$tracking_id, file = "temp.csv",row.names = F,quote = F,sep = ",")
x=paste(just_lps_products$tracking_id,sep=",")
x
?past
?paste
x=paste(just_lps_products$tracking_id,sep=",",collapse)
x=paste(just_lps_products$tracking_id,sep=",",collapse=T)
x=paste(just_lps_products$tracking_id,sep=",",collapse="")
x=paste(just_lps_products$tracking_id,sep=",",collapse=",")
x
x=paste(just_lps_products$tracking_id,sep=",",collapse=",\n")
x
x=paste(just_lps_products$tracking_id,sep=",",collapse=",\\n")
x
x=paste(just_lps_products$tracking_id,sep=",",collapse=",/n")
x=paste(just_lps_products$tracking_id,sep=",",collapse=",//n")
x=paste(just_lps_products$tracking_id,sep=",",collapse=",\\\n")
feature_table = read.table("FeatureTable.txt")
feature_table = read.delim("FeatureTable.txt")
View(feature_table)
feature_table[,c("Genome","RefSeq.Locus.Tag")]
View(lps_products)
View(just_lps_products)
just_lps_products<-merge(x=just_lps_products,y=feature_table[,c("Genome","RefSeq.Locus.Tag")],by.x="tracking_id",by.y="RefSeq.Locus.Tag",all.x=T,all.y=F)
View(just_lps_products)
just_lps_products$Genome[54]
just_lps_products$Genome[54]<-"Unknown"
feature_table = read.delim("FeatureTable.txt",colClasses = "character")
just_lps_products<-merge(x=just_lps_products,y=feature_table[,c("Genome","RefSeq.Locus.Tag")],by.x="tracking_id",by.y="RefSeq.Locus.Tag",all.x=T,all.y=F)
just_lps_products$Genome[54]<-"Unknown"
just_lps_products$Genome[54]
just_lps_products<-merge(x=filtered_annotated,y=lps_products,by.x="product_name",by.y="product",all=F)
just_lps_products<-merge(x=just_lps_products,y=feature_table[,c("Genome","RefSeq.Locus.Tag")],by.x="tracking_id",by.y="RefSeq.Locus.Tag",all.x=T,all.y=F)
View(just_lps_products)
just_lps_products[54,]
just_lps_products[54,]$Genome
just_lps_products[54,]$Genome<-"Unknown"
just_lps_products[54,]$Genome
just_lps_products[54,]
View(just_lps_products)
just_lps_products[,c(2:7,9)]
View(wide)
View(just_lps_products)
jlp_wide <- reshape(just_lps_products,
v.names = c("S1_FPM","S2_FPM","S3_FPM","S4_FPM"),
timevar = "Genome",
idvar = "product_name",
direction = "wide")
jlp_wide <- reshape(just_lps_products,
v.names = c("S1_FPM"),
timevar = "Genome",
idvar = "product_name",
direction = "wide")
View(jlp_wide)
jlp_wide <- reshape(just_lps_products[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")],
v.names = c("S1_FPM"),
timevar = "product_name",
idvar = "Genome",
direction = "wide")
jlp_wide <- reshape(just_lps_products,
v.names = "S1_FPM",
timevar = "product_name",
idvar = "Genome",
direction = "wide")
View(jlp_wide)
jlp_wide <- reshape(just_lps_products[c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")],
v.names = "S1_FPM",
timevar = "product_name",
idvar = "Genome",
direction = "wide")
jlp_wide <- reshape(just_lps_products[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")],
v.names = "S1_FPM",
timevar = "product_name",
idvar = "Genome",
direction = "wide")
jlp_wide <- reshape(just_lps_products[,c("Genome","product_name","S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum")],
v.names = c("S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum"),
timevar = "product_name",
idvar = "Genome",
direction = "wide")
View(jlp_wide)
jlp_wide <- reshape(just_lps_products[which(just_lps_products$product_name="3-deoxy-d-manno-octulosonic-acid transferase"),c("Genome","product_name","S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum")],
jlp_wide <- reshape(just_lps_products[which(just_lps_products$product_name=="3-deoxy-d-manno-octulosonic-acid transferase"),c("Genome","product_name","S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum")],
v.names = c("S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum"),
timevar = "Genome",
idvar = "product_name",
direction = "wide")
View(jlp_wide)
library(reshape2)
melted <- melt(just_lps_products)
View(melted)
jlp_recast <- dcast(melted,melted$product_name ~ melted$Genome ~ melted$variable)
jlp_recast <- acast(melted,melted$product_name ~ melted$Genome ~ melted$variable)
jlp_recast <- dcast(melted,melted$product_name ~ melted$variable)
View(jlp_recast)
jlp_recast <- dcast(melted,melted$product_name ~ melted$Genome)
jlp_recast <- dcast(melted,melted$product_name ~ melted$Genome,sum)
View(jlp_recast)
jlp_recast <- dcast(melted,melted$product_name + melted$variable ~ melted$Genome,sum)
View(jlp_recast)
write.csv(jlp_recast,"jlp_recast.csv",row.names = F)
jlp_wide <- reshape(just_lps_products,c("Genome","product_name","S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum")],
v.names = c("S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum"),
timevar = "Genome",
idvar = "product_name",
direction = "wide")
jlp_wide <- reshape(just_lps_products[c("Genome","product_name","S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum")],
v.names = c("S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum"),
timevar = "Genome",
idvar = "product_name",
direction = "wide")
View(jlp_wide)
write.csv(just_lps_products,"just_lps_products_source_pivot.csv",row.names = F)
write.csv(jlp_wide,"jlp_wide.csv")
