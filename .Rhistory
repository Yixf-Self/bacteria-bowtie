by_lps <- by(melted_lps$value,tlr4[,"variable"],median)
by_lps <- by(melted_lps$value,melted_lps[,"variable"],median)
lm(medians_tlr4$values ~ by_lps$value)
View(melted_lps)
by_lps <- by(melted_lps$value,melted_lps[,"variable"],mean)
medians_lps<-data.frame(series=c('s+h-','s-h-','s+h+','s-h+'),values=c(by_lps[[1]],by_lps[[2]],by_lps[[3]],by_lps[[4]]))
View(medians_lps)
View(medians_tlr4)
setRepositories()
ls
ls()
install.packages("ESEA")
View(medians_lps)
View(medians_tlr4)
View(medians_lps)
View(melted_lps)
medians_lps<-data.frame(series=c('s+h+','s-h+','s+h-','s-h-'),values=c(by_lps[[1]],by_lps[[2]],by_lps[[3]],by_lps[[4]]))
View(medians_lps)
View(medians_tlr4)
row.names(medians_lps)<-medians_lps$series
medians_lps<-medians_lps[c('s+h-','s-h-','s+h+','s-h+'),]
lm(medians_tlr4$values ~ medians_lps$value)
lin_model<-lm(medians_tlr4$values ~ medians_lps$value)
lin_model
plot(lin_model)
plot(medians_lps$values,medians_tlr4$values)
View(medians_lps)
View(medians_tlr4)
cor(means_lps,medians_tlr4)
melted_lps <- melt(just_lps_genes)
by_lps <- by(melted_lps$value,melted_lps[,"variable"],mean)
means_lps<-data.frame(series=c('s+h+','s-h+','s+h-','s-h-'),values=c(by_lps[[1]],by_lps[[2]],by_lps[[3]],by_lps[[4]]))
row.names(means_lps)<-means_lps$series
means_lps<-means_lps[c('s+h-','s-h-','s+h+','s-h+'),]
lin_model<-lm(medians_tlr4$values ~ means_lps$value)
plot(means_lps$values,medians_tlr4$values)
cor(means_lps,medians_tlr4)
cor(means_lps$values,medians_tlr4$values)
cor.test(means_lps$values,medians_tlr4$values)
View(means_lps)
nfkb <- read.delim("nfkb-pcr-data.tab")
order<-c('s+h-','s-h-','s+h+','s-h+')
nfkb$Series <- factor(nfkb$Series,order)
boxplot(nfkb$Values ~ nfkb$Series,col='white')
#S-h- vs. S+h-
clusterof2 <- rbind(nfkb,tlr4)
clusterof2$Series <- factor(clusterof2$Series,order)
boxplot(Values ~ Series, data = clusterof2)
#Correlation2####
by_clusterof2<-by(clusterof2$Values,clusterof2[,"Series"],median)
#by_clusterof2<-by(clusterof2$Values,clusterof2[,"Series"],mean)
by_clusterof2<-by(clusterof2$Values,clusterof2[,"Series"],median)
#by_clusterof2<-by(clusterof2$Values,clusterof2[,"Series"],mean)
medians_clusterof2<-data.frame(series=c('s+h-','s-h-','s+h+','s-h+'),values=c(by_clusterof2[[1]],by_clusterof2[[2]],by_clusterof2[[3]],by_clusterof2[[4]]))
cor(medians_clusterof2$values,means_lps$values,method = "p")
cor.test(medians_clusterof2$values,means_lps$values,method = "p")
b_model <- lm(means_lps$values ~ medians_clusterof2$values)
plot(medians_clusterof2$values,means_lps$values,ylab='B.fragilis normalized counts',xlab='TLR4+nfkb median expression')
tlr2 <- read.delim("tlr2-pcr-data.tab")
order<-c('s+h-','s-h-','s+h+','s-h+')
tlr2$Series <- factor(tlr2$Series,order)
boxplot(tlr2$Values ~ tlr2$Series,col='white')
clusterof3 <- rbind(nfkb,tlr4,tlr2)
clusterof3$Series <- factor(clusterof3$Series,order)
boxplot(Values ~ Series, data = clusterof3)
by_clusterof3<-by(clusterof3$Values,clusterof3[,"Series"],median)
#by_clusterof3<-by(clusterof3$Values,clusterof3[,"Series"],mean)
medians_clusterof3<-data.frame(series=c('s+h-','s-h-','s+h+','s-h+'),values=c(by_clusterof3[[1]],by_clusterof3[[2]],by_clusterof3[[3]],by_clusterof3[[4]]))
cor(medians_clusterof3$values,means_lps$values,method = "p")
cor.test(medians_clusterof3$values,means_lps$values,method = "p")
b_model <- lm(means_lps$values ~ medians_clusterof3$values)
plot(medians_clusterof3$values,means_lps$values,ylab='B.fragilis normalized counts',xlab='TLR4/TLR2/nfkb relative expression')
library(RColorBrewer)
library(reshape2)
library(tidyr)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
#setup####
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
#for LPS pathway####
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
lowercase_lps<-data.frame(tolower(lps_path[,1]))
lps_path<-lowercase_lps
colnames(lps_path)<-"V1"
rm(lowercase_lps)
lps_genes<-data.frame(gene=lps_path[34:96,])
lps_products<-data.frame(product=lps_path[1:34,])
just_lps_products<-merge(x=sum_by_product_name,y=lps_products,by="product",all=F)
just_lps_genes<-merge(x=sum_by_gene_name,y=lps_genes,by="gene",all=F)
lps_annot=read.table("LPS_list_annotation",header = T,sep = ";",strip.white = T,quote = "")
lps_annot$product <- tolower(lps_annot$product)
just_lps_products_annot <- merge(x=lps_annot,y=just_lps_products,by="product",all.x=F,all.y=T)
# tlr4 pcr expression ####
tlr4 <- read.delim("tlr4-pcr-data.tab")
order<-c('s+h-','s-h-','s+h+','s-h+')
tlr4$Series <- factor(tlr4$Series,order)
#now for nfkb ####
nfkb <- read.delim("nfkb-pcr-data.tab")
order<-c('s+h-','s-h-','s+h+','s-h+')
nfkb$Series <- factor(nfkb$Series,order)
#now for tlr2 ####
tlr2 <- read.delim("tlr2-pcr-data.tab")
order<-c('s+h-','s-h-','s+h+','s-h+')
tlr2$Series <- factor(tlr2$Series,order)
View(tlr2)
plot(tlr2$Values,tlr4$Values)
plot(tlr2$Values,sample(tlr4$Values,25))
cor(tlr2$Values,sample(tlr4$Values,25))
cor.test(tlr2$Values,sample(tlr4$Values,25))
plot(tlr2$Series~tlr2$Values)
plot(tlr2$Values~tlr2$Series)
plot(tlr2$Values~tlr2$Series) -> tlr2box
tlr2box
summary(tlr2box)
boxplot(tlr2$Values~tlr2$Series) -> tlr2box
tlr2box$stats
tlr2box$n
tlr2box$conf
tlr2box$out
tlr2box$group
tlr2box$names
?boxplot
tlr2box$stats[3,]
boxplot(tlr4$Values~tlr4$Series) -> tlr4box
boxplot(tlr2$Values~tlr2$Series) -> tlr2box
boxplot(nfkb$Values~nfkb$Series) -> nfkbbox
tlr4box$stats[3,] -> medians_tlr4
tlr2box$stats[3,] -> medians_tlr2
nfkbbox$stats[3,] -> medians_nfkb
medians_pcr = data.frame(row.names = c("nfkb","tlr2","tlr4"),rbind(medians_nfkb,medians_tlr2,medians_tlr4))
View(medians_pcr)
colnames(medians_pcr)
?data.frame
colnames(medians_pcr) = order
View(medians_pcr)
i=1
(i in length(medians_pcr[1,])) {
i
}
for (i in length(medians_pcr[1,])) {
i
}
length(medians_pcr[1,])
length(medians_pcr[,1])
length(medians_pcr[,1])-1
for (i in (length(medians_pcr[,1])-1)) {
temp1 = medians_pcr[i,]
j = i+1
if (i = 1) {
for (j in (length(medians_pcr[,1])-1)) {
temp2 = medians_pcr[j,]
cor.test(temp1,temp2)
}
if (i = 2) {
temp2 = medians_pcr[3,]
cor.test(temp1,temp2)
}
?if
i=1
for (i in (length(medians_pcr[,1])-1)) {
temp1 = medians_pcr[i,]
j = i+1
if (i == 1) {
for (j in (length(medians_pcr[,1])-1)) {
temp2 = medians_pcr[j,]
cor.test(temp1,temp2)
}
if (i == 2) {
temp2 = medians_pcr[3,]
cor.test(temp1,temp2)
}
View(temp1)
View(temp2)
values(temp1)
temp1[[1,]]
temp1[[]]
as.matrix(temp1)
cor.test(as.matrix(temp1),as.matrix(temp2))
?echo
?print
print(temp1)
names(temp1)
row.names(temp1)
print(row.names(temp1))
i=1
for (i in (length(medians_pcr[,1])-1)) {
temp1 = as.matrix(medians_pcr[i,])
j = i+1
if (i == 1) {
for (j in (length(medians_pcr[,1])-1)) {
temp2 = as.matrix(medians_pcr[j,])
cor.test(temp1,temp2)
}
if (i == 2) {
temp2 = as.matrix(medians_pcr[3,])
cor.test(temp1,temp2)
}
i=1
for (i in (length(medians_pcr[,1])-1)) {
temp1 = as.matrix(medians_pcr[i,])
j = i+1
if (i == 1) {
for (j in (length(medians_pcr[,1])-1)) {
temp2 = as.matrix(medians_pcr[j,])
cor.test(temp1,temp2) = test
print(test)
}
if (i == 2) {
temp2 = as.matrix(medians_pcr[3,])
cor.test(temp1,temp2) = test
print(test)
}
cor.test(temp1,temp2)
i=1
for (i in (length(medians_pcr[,1])-1)) {
temp1 = as.matrix(medians_pcr[i,])
j = i+1
if (i == 1) {
for (j in (length(medians_pcr[,1])-1)) {
temp2 = as.matrix(medians_pcr[j,])
cor.test(temp1,temp2)
}
if (i == 2) {
temp2 = as.matrix(medians_pcr[3,])
cor.test(temp1,temp2)
}
i=1
for (i in (length(medians_pcr[,1])-1)) {
temp1 = as.matrix(medians_pcr[i,])
j = i+1
if (i == 1) {
for (j in (length(medians_pcr[,1])-1)) {
temp2 = as.matrix(medians_pcr[j,])
print(cor.test(temp1,temp2))
}
if (i == 2) {
temp2 = as.matrix(medians_pcr[3,])
print(cor.test(temp1,temp2))
}
i=1
for (i in (length(medians_pcr[,1])-1)) {
temp1 = as.matrix(medians_pcr[i,])
j = i+1
if (i == 1) {
for (j in (length(medians_pcr[,1])-1)) {
temp2 = as.matrix(medians_pcr[j,])
print(cor.test(temp1,temp2))
}
if (i == 2) {
temp2 = as.matrix(medians_pcr[3,])
print(cor.test(temp1,temp2))
}
paste(row.names(medians_pcr[i,]),"vs.",row.names(medians_pcr[j,]))
i=1
for (i in (length(medians_pcr[,1])-1)) {
temp1 = as.matrix(medians_pcr[i,])
j = i+1
if (i == 1) {
for (j in (length(medians_pcr[,1])-1)) {
temp2 = as.matrix(medians_pcr[j,])
paste(row.names(medians_pcr[i,]),"vs.",row.names(medians_pcr[j,]))
print(cor.test(temp1,temp2))
}
if (i == 2) {
temp2 = as.matrix(medians_pcr[3,])
print(cor.test(temp1,temp2))
}
i=1
for (i in (length(medians_pcr[,1])-1)) {
temp1 = as.matrix(medians_pcr[i,])
j = i+1
if (i == 1) {
for (j in (length(medians_pcr[,1])-1)) {
temp2 = as.matrix(medians_pcr[j,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(medians_pcr[j,])))
print(cor.test(temp1,temp2))
}
if (i == 2) {
temp2 = as.matrix(medians_pcr[3,])
print(cor.test(temp1,temp2))
}
i=1
for (i in (length(medians_pcr[,1])-1)) {
temp1 = as.matrix(medians_pcr[i,])
j = i+1
if (i == 1) {
for (j in (length(medians_pcr[,1])-1)) {
temp2 = as.matrix(medians_pcr[j,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(medians_pcr[j,])))
print(cor.test(temp1,temp2))
}
if (i == 2) {
temp2 = as.matrix(medians_pcr[3,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(medians_pcr[j,])))
print(cor.test(temp1,temp2))
}
print(medians_pcr)
1:length(medians_pcr[,1])
i=1
for (i in i:(length(medians_pcr[,1])-1)) {
temp1 = as.matrix(medians_pcr[i,])
j = i+1
if (i == 1) {
for (j in j:(length(medians_pcr[,1])-1)) {
temp2 = as.matrix(medians_pcr[j,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(medians_pcr[j,])))
print(cor.test(temp1,temp2))
}
if (i == 2) {
temp2 = as.matrix(medians_pcr[3,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(medians_pcr[j,])))
print(cor.test(temp1,temp2))
}
i=1
j = i+1
j
j:(length(medians_pcr[,1])-1)
j:(length(medians_pcr[,1]))
i=1
for (i in i:(length(medians_pcr[,1])-1)) {
temp1 = as.matrix(medians_pcr[i,])
j = i+1
if (i == 1) {
for (j in j:(length(medians_pcr[,1]))) {
temp2 = as.matrix(medians_pcr[j,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(medians_pcr[j,])))
print(cor.test(temp1,temp2))
}
if (i == 2) {
temp2 = as.matrix(medians_pcr[3,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(medians_pcr[j,])))
print(cor.test(temp1,temp2))
}
medians_pcr <- data.frame(row.names(c("gene1","gene2","gene3")),rbind(rnorm(4),rnorm(4),rnorm(4)))
rnorm(4)
medians_pcr <- data.frame(row.names(c("gene1","gene2","gene3")),rbind(rnorm(4),rnorm(4),rnorm(4)))
View(just_lps_products)
colnames(just_lps_products) = c("s+h+","s-h+","s+h-","s-h-")
View(sum_by_gene_name)
View(sum_by_product_name)
colnames(sum_by_product_name)<-c("product","s+h+","s-h+","s+h-","s-h-")
View(sum_by_product_name)
colnames(sum_by_gene_name)<-c("gene","s+h+","s-h+","s+h-","s-h-")
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
lowercase_lps<-data.frame(tolower(lps_path[,1]))
lps_path<-lowercase_lps
colnames(lps_path)<-"V1"
rm(lowercase_lps)
lps_genes<-data.frame(gene=lps_path[34:96,])
lps_products<-data.frame(product=lps_path[1:34,])
just_lps_products<-merge(x=sum_by_product_name,y=lps_products,by="product",all=F)
just_lps_genes<-merge(x=sum_by_gene_name,y=lps_genes,by="gene",all=F)
lps_annot=read.table("LPS_list_annotation",header = T,sep = ";",strip.white = T,quote = "")
lps_annot$product <- tolower(lps_annot$product)
just_lps_products_annot <- merge(x=lps_annot,y=just_lps_products,by="product",all.x=F,all.y=T)
View(just_lps_products)
View(just_lps_genes)
?row
row(just_lps_products)
?all
row_sub = apply(just_lps_products, function(row), all( row != 0))
row_sub = apply(just_lps_products, function(row) all( row != 0))
row_sub = apply(just_lps_products, 1, function(row) all( row != 0))
row_sub
row_sub = apply(just_lps_products, 1, function(row) all(row !=0 ))
row_sub = apply(just_lps_products, 1, function(row) any(row !=0 ))
row_sub
row_sub = apply(just_lps_products, 1, function(row) any(row ==0 ))
row_sub
just_lps_products[just_lps_products==0]<-NA
View(just_lps_products)
na.omit(just_lps_products)
lpsProductsNoZeroes = na.omit(just_lps_products)
lpsProductsNoZeroes = lpsProductsNoZeroes[,c('product','s+h-','s-h-','s+h+','s-h+')]
View(lpsProductsNoZeroes)
i=1
j=1
for (i in i:(length(medians_pcr[,1]))) {
for (j in j:(length(lpsProductsNoZeroes[,1]))) {
temp1 = as.matrix(medians_pcr[i,])
temp2 = as.matrix(lpsProductsNoZeroes[j,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(lpsProductsNoZeroes[j,])))
print(cor.test(temp1,temp2))
}
lpsProductsNoZeroes[j,]
medians_pcr[i,]
row.names(lpsProductsNoZeroes) = lpsProductsNoZeroes[,'product']
lpsProductsNoZeroes = na.omit(just_lps_products)
row.names(lpsProductsNoZeroes) = lpsProductsNoZeroes[,'product']
lpsProductsNoZeroes = lpsProductsNoZeroes[,c('s+h-','s-h-','s+h+','s-h+')]
i=1
j=1
for (i in i:(length(medians_pcr[,1]))) {
for (j in j:(length(lpsProductsNoZeroes[,1]))) {
temp1 = as.matrix(medians_pcr[i,])
temp2 = as.matrix(lpsProductsNoZeroes[j,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(lpsProductsNoZeroes[j,])))
print(cor.test(temp1,temp2))
}
i=1
for (i in i:(length(medians_pcr[,1]))) {
j=1
for (j in j:(length(lpsProductsNoZeroes[,1]))) {
temp1 = as.matrix(medians_pcr[i,])
temp2 = as.matrix(lpsProductsNoZeroes[j,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(lpsProductsNoZeroes[j,])))
print(cor.test(temp1,temp2))
}
medians_pcr
lpsProductsNoZeroes
setwd("~/megahit_output_dedup")
read.delim("covstats.txt")
read.delim("covstats.txt")->covstats
mean(covstats$Avg_fold)
mean(covstats$Length)
plot(density(covstats$Avg_fold))
summary(covstats$Avg_fold)
summary(covstats$Length)
summary(covstats$Covered_percent)
summary(covstats$Plus_reads)
summary(covstats$Avg_fold)
setwd("/Users/Scott/tophat-bacteria/scripts/R-interactive")
# The purpose of this is to correlate gene expression of the bacteria
# with gene expression of the mouse host
# Specifically genes in the LPS pathway (for bacteria)
# And TLR2/4, NFk-B (for mouse host)
library(RColorBrewer)
library(reshape2)
library(tidyr)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
#setup####
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)<-c("product","s+h+","s-h+","s+h-","s-h-")
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)<-c("gene","s+h+","s-h+","s+h-","s-h-")
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
#for LPS pathway####
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
lowercase_lps<-data.frame(tolower(lps_path[,1]))
lps_path<-lowercase_lps
colnames(lps_path)<-"V1"
rm(lowercase_lps)
lps_genes<-data.frame(gene=lps_path[34:96,])
lps_products<-data.frame(product=lps_path[1:34,])
just_lps_products<-merge(x=sum_by_product_name,y=lps_products,by="product",all=F)
just_lps_genes<-merge(x=sum_by_gene_name,y=lps_genes,by="gene",all=F)
lps_annot=read.table("LPS_list_annotation",header = T,sep = ";",strip.white = T,quote = "")
lps_annot$product <- tolower(lps_annot$product)
just_lps_products_annot <- merge(x=lps_annot,y=just_lps_products,by="product",all.x=F,all.y=T)
# mouse expression setup ####
tlr4 <- read.delim("tlr4-pcr-data.tab")
source('~/tophat-bacteria/scripts/R-interactive/regression analysis and more.R')
View(medians_pcr)
View(lpsProductsNoZeroes)
plot(medians_pcr["tlr4",],lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase"])
plot(medians_pcr["tlr4",],lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",])
xyplot(medians_pcr["tlr4",],lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",])
medians_pcr["tlr4",]
lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]
unlist(medians_pcr["tlr4",])
medians_pcr[["tlr4",]]
medians_pcr[["tlr4"],]
unlist(medians_pcr["tlr4",])
plot(unlist(medians_pcr["tlr4",]),unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]))
plot(unlist(medians_pcr["tlr4",]),unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]),xlab="Relative expression of TLR4",ylab="Relative expression of udpHNacetylGD")
model<-lm.fit(unlist(medians_pcr["tlr4",]),unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]))
model<-lm.fit(medians_pcr["tlr4",],lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",])
model<-lm(medians_pcr["tlr4",],lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",])
model$coefficients
model$residuals
model$effects
model$terms
summary(model)
model<-lm(unlist(medians_pcr["tlr4",]),unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]))
model<-lm(unlist(medians_pcr["tlr4",]) ~ unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]))
model
summary(model)
model(medians_pcr["tlr4",] ~ lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",])
model<-lm(medians_pcr["tlr4",] ~ lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",])
model<-lm(medians_pcr ~ lpsProductsNoZeroes)
unlist(medians_pcr)
unlist(lpsProductsNoZeroes)
lm(unlist(medians_pcr) ~unlist(lpsProductsNoZeroes) )
model<-lm(unlist(unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]) ~ medians_pcr["tlr4",]))
model<-lm(unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]) ~ unlist(medians_pcr["tlr4",]))
abline(40433,4943,col="blue")
plot(unlist(medians_pcr["tlr2",]),unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]),xlab="Relative expression of TLR2",ylab="Relative expression of udpHNacetylGD")
model<-lm(unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]) ~ unlist(medians_pcr["tlr2",]))
summary(model)
abline(29249,15696,col="blue")
model$coefficients
model$coefficients[1]
model$coefficients[[1]]
model$coefficients[[2]]
abline(model$coefficients[[1]],model$coefficients[[2]],col="blue")
plot(unlist(medians_pcr["tlr2",]),unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]),xlab="Relative expression of TLR2",ylab="Relative expression of udpHNacetylGD")
model<-lm(unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]) ~ unlist(medians_pcr["tlr2",]))
abline(model$coefficients[[1]],model$coefficients[[2]],col="blue")
install.packages("devtools")
