rm(lowercase_butanoate)
just_butanoate_products<-merge(x=sum_by_product_name,y=butanoate_path,by="product",all=F)
just_butanoate_products<-merge(x=sum_by_product_name,y=butanoate_path,by.x="product",by.y="V1",all=F)
View(just_butanoate_products)
butanoate_path<-data.frame(unique(butanoate_annot$product))
lowercase_butanoate<-data.frame(tolower(butanoate_path[,1]))
butanoate_path<-lowercase_butanoate
colnames(butanoate_path)<-"V1"
rm(lowercase_butanoate)
just_butanoate_products<-merge(x=sum_by_product_name,y=butanoate_path,by.x="product",by.y="V1",all=F)
View(just_butanoate_products)
View(butanoate_annot)
View(just_butanoate_products)
just_butanoate_products_annot <- merge(x=butanoate_annot,y=just_butanoate_products,by="product",all.x=F,all.y=T)
View(just_butanoate_products_annot)
write.csv(just_butanoate_products_annot,"just_butanoate_products_annot.csv")
butanoate_annot$product <- tolower(butanoate_annot$product)
just_butanoate_products_annot <- merge(x=butanoate_annot,y=just_butanoate_products,by="product",all.x=F,all.y=T)
write.csv(just_butanoate_products_annot,"just_butanoate_products_annot.csv")
just_butanoate_from_excel <- read.delim("for_butanoate_heatmap.txt",header = T)
row.names(just_butanoate_from_excel)<-just_butanoate_from_excel$ecnumber
just_butanoate_from_excel <- read.delim("for_butanoate_heatmap.txt",header = T)
row.names(just_butanoate_from_excel)<-just_butanoate_from_excel$ecnumber
just_butanoate_from_excel <- just_butanoate_from_excel[order(just_butanoate_from_excel$cancer),]
just_butanoate_from_excel <- just_butanoate_from_excel[order(just_butanoate_from_excel$Combined),]
just_butanoate_from_excel <- data.matrix(just_butanoate_from_excel[,4:6])
x=just_butanoate_from_excel
oldPar <- par(no.readonly = T)
myColors=colorRampPalette(c("Blue","Yellow"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Cancer", "Inflammation","SMAD3-KO"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Combined", "H. hepaticus","SMAD3-KO"))
View(just_butanoate_from_excel)
View(just_lps_from_excel)
View(just_poly_from_excel)
View(just_butanoate_from_excel)
just_butanoate_from_excel <- read.delim("for_butanoate_heatmap.txt",header = T)
row.names(just_butanoate_from_excel)<-just_butanoate_from_excel$ecnumber
just_butanoate_from_excel <- just_butanoate_from_excel[order(just_butanoate_from_excel$Combined),]
just_butanoate_from_excel <- data.matrix(just_butanoate_from_excel[,4:6])
x=just_butanoate_from_excel
oldPar <- par(no.readonly = T)
myColors=colorRampPalette(c("Blue","Yellow"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Combined", "H. hepaticus","SMAD3-KO"))
just_butanoate_from_excel <- read.delim("for_butanoate_heatmap.txt",header = T)
row.names(just_butanoate_from_excel)<-just_butanoate_from_excel$gene
just_butanoate_from_excel <- just_butanoate_from_excel[order(just_butanoate_from_excel$Combined),]
just_butanoate_from_excel <- data.matrix(just_butanoate_from_excel[,4:6])
x=just_butanoate_from_excel
oldPar <- par(no.readonly = T)
myColors=colorRampPalette(c("Blue","Yellow"))
heatmap(x, Rowv=NA, Colv=NA, col = myColors(255),scale="none", margins=c(5,5), cexCol=1, labCol = c("Combined", "H. hepaticus","SMAD3-KO"))
View(just_butanoate_from_excel)
View(just_lps_products_annot)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
tlr4 <- read.delim("tlr4-pcr-data.tab")
View(tlr4)
Loblolly[1:10,]
wide <- reshape(Loblolly,
v.names = "height",
timevar = "age",
idvar = "Seed",
direction = "wide")
wide
wide$h0.3 <- wide$height.3
wide$h3.5 <- wide$height.5 - wide$height.3
wide$h5.10 <- wide$height.10 - wide$height.5
wide$h10.15 <- wide$height.15 - wide$height.10
wide$h15.20 <- wide$height.20 - wide$height.15
wide$h20.25 <- wide$height.25 - wide$height.20
View(wide)
library(RColorBrewer)
sequential <- brewer.pal(6, "BuGn")
barplot(t(wide[,8:13]),
names.arg = wide$Seed, # x-axis labels
cex.names = 0.7, # makes x-axis labels small enough to show all
col = sequential, # colors
xlab = "Seed Source",
ylab = "Height, Feet",
xlim = c(0,20), # these two lines allow space for the legend
width = 1) # these two lines allow space for the legend
legend("bottomright",
legend = c("20-25", "15-20", "10-15", "5-10", "3-5", "0-3"), #in order from top to bottom
fill = sequential[6:1], # 6:1 reorders so legend order matches graph
title = "Years")
library(RColorBrewer)
sequential <- brewer.pal(6, "BuGn")
Loblolly[1:10,]
wide <- reshape(Loblolly,
v.names = "height",
timevar = "age",
idvar = "Seed",
direction = "wide")
wide[1:5,]
wide$h0.3 <- wide$height.3
wide$h3.5 <- wide$height.5 - wide$height.3
wide$h5.10 <- wide$height.10 - wide$height.5
wide$h10.15 <- wide$height.15 - wide$height.10
wide$h15.20 <- wide$height.20 - wide$height.15
wide$h20.25 <- wide$height.25 - wide$height.20
barplot(t(wide[,8:13]),
names.arg = wide$Seed, # x-axis labels
cex.names = 0.7, # makes x-axis labels small enough to show all
col = sequential, # colors
xlab = "Seed Source",
ylab = "Height, Feet",
xlim = c(0,20), # these two lines allow space for the legend
width = 1) # these two lines allow space for the legend
legend("bottomright",
legend = c("20-25", "15-20", "10-15", "5-10", "3-5", "0-3"), #in order from top to bottom
fill = sequential[6:1], # 6:1 reorders so legend order matches graph
title = "Years")
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
lowercase_lps<-data.frame(tolower(lps_path[,1]))
lps_path<-lowercase_lps
colnames(lps_path)<-"V1"
rm(lowercase_lps)
lps_products<-data.frame(product=lps_path[1:34,])
lps_genes<-data.frame(gene=lps_path[34:96,])
just_lps_products<-merge(x=filtered_annotated,y=lps_products,by="product",all=F)
just_lps_products<-merge(x=filtered_annotated,y=lps_products,by.x="product_name",by.y="product",all=F)
View(just_lps_products)
just_lps_genes<-merge(x=filtered_annotated,y=lps_genes,by="gene",all=F)
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
lps_genes<-data.frame(gene=lps_path[34:96,])
just_lps_genes<-merge(x=filtered_annotated,y=lps_genes,by="gene",all=F)
View(just_lps_genes)
just_lps_products$tracking_id
write.csv(x = just_lps_products$tracking_id, file = "temp.csv",row.names = F,quote = F,col.names = F)
write.csv(x = just_lps_products$tracking_id, file = "temp.csv",row.names = F,quote = F,sep = ",")
x=paste(just_lps_products$tracking_id,sep=",")
x
?past
?paste
x=paste(just_lps_products$tracking_id,sep=",",collapse)
x=paste(just_lps_products$tracking_id,sep=",",collapse=T)
x=paste(just_lps_products$tracking_id,sep=",",collapse="")
x=paste(just_lps_products$tracking_id,sep=",",collapse=",")
x
x=paste(just_lps_products$tracking_id,sep=",",collapse=",\n")
x
x=paste(just_lps_products$tracking_id,sep=",",collapse=",\\n")
x
x=paste(just_lps_products$tracking_id,sep=",",collapse=",/n")
x=paste(just_lps_products$tracking_id,sep=",",collapse=",//n")
x=paste(just_lps_products$tracking_id,sep=",",collapse=",\\\n")
feature_table = read.table("FeatureTable.txt")
feature_table = read.delim("FeatureTable.txt")
View(feature_table)
feature_table[,c("Genome","RefSeq.Locus.Tag")]
View(lps_products)
View(just_lps_products)
just_lps_products<-merge(x=just_lps_products,y=feature_table[,c("Genome","RefSeq.Locus.Tag")],by.x="tracking_id",by.y="RefSeq.Locus.Tag",all.x=T,all.y=F)
View(just_lps_products)
just_lps_products$Genome[54]
just_lps_products$Genome[54]<-"Unknown"
feature_table = read.delim("FeatureTable.txt",colClasses = "character")
just_lps_products<-merge(x=just_lps_products,y=feature_table[,c("Genome","RefSeq.Locus.Tag")],by.x="tracking_id",by.y="RefSeq.Locus.Tag",all.x=T,all.y=F)
just_lps_products$Genome[54]<-"Unknown"
just_lps_products$Genome[54]
just_lps_products<-merge(x=filtered_annotated,y=lps_products,by.x="product_name",by.y="product",all=F)
just_lps_products<-merge(x=just_lps_products,y=feature_table[,c("Genome","RefSeq.Locus.Tag")],by.x="tracking_id",by.y="RefSeq.Locus.Tag",all.x=T,all.y=F)
View(just_lps_products)
just_lps_products[54,]
just_lps_products[54,]$Genome
just_lps_products[54,]$Genome<-"Unknown"
just_lps_products[54,]$Genome
just_lps_products[54,]
View(just_lps_products)
just_lps_products[,c(2:7,9)]
View(wide)
View(just_lps_products)
jlp_wide <- reshape(just_lps_products,
v.names = c("S1_FPM","S2_FPM","S3_FPM","S4_FPM"),
timevar = "Genome",
idvar = "product_name",
direction = "wide")
jlp_wide <- reshape(just_lps_products,
v.names = c("S1_FPM"),
timevar = "Genome",
idvar = "product_name",
direction = "wide")
View(jlp_wide)
jlp_wide <- reshape(just_lps_products[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")],
v.names = c("S1_FPM"),
timevar = "product_name",
idvar = "Genome",
direction = "wide")
jlp_wide <- reshape(just_lps_products,
v.names = "S1_FPM",
timevar = "product_name",
idvar = "Genome",
direction = "wide")
View(jlp_wide)
jlp_wide <- reshape(just_lps_products[c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")],
v.names = "S1_FPM",
timevar = "product_name",
idvar = "Genome",
direction = "wide")
jlp_wide <- reshape(just_lps_products[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")],
v.names = "S1_FPM",
timevar = "product_name",
idvar = "Genome",
direction = "wide")
jlp_wide <- reshape(just_lps_products[,c("Genome","product_name","S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum")],
v.names = c("S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum"),
timevar = "product_name",
idvar = "Genome",
direction = "wide")
View(jlp_wide)
jlp_wide <- reshape(just_lps_products[which(just_lps_products$product_name="3-deoxy-d-manno-octulosonic-acid transferase"),c("Genome","product_name","S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum")],
jlp_wide <- reshape(just_lps_products[which(just_lps_products$product_name=="3-deoxy-d-manno-octulosonic-acid transferase"),c("Genome","product_name","S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum")],
v.names = c("S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum"),
timevar = "Genome",
idvar = "product_name",
direction = "wide")
View(jlp_wide)
library(reshape2)
melted <- melt(just_lps_products)
View(melted)
jlp_recast <- dcast(melted,melted$product_name ~ melted$Genome ~ melted$variable)
jlp_recast <- acast(melted,melted$product_name ~ melted$Genome ~ melted$variable)
jlp_recast <- dcast(melted,melted$product_name ~ melted$variable)
View(jlp_recast)
jlp_recast <- dcast(melted,melted$product_name ~ melted$Genome)
jlp_recast <- dcast(melted,melted$product_name ~ melted$Genome,sum)
View(jlp_recast)
jlp_recast <- dcast(melted,melted$product_name + melted$variable ~ melted$Genome,sum)
View(jlp_recast)
write.csv(jlp_recast,"jlp_recast.csv",row.names = F)
jlp_wide <- reshape(just_lps_products,c("Genome","product_name","S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum")],
v.names = c("S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum"),
timevar = "Genome",
idvar = "product_name",
direction = "wide")
jlp_wide <- reshape(just_lps_products[c("Genome","product_name","S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum")],
v.names = c("S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum"),
timevar = "Genome",
idvar = "product_name",
direction = "wide")
View(jlp_wide)
write.csv(just_lps_products,"just_lps_products_source_pivot.csv",row.names = F)
write.csv(jlp_wide,"jlp_wide.csv")
library(ggplot2)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
library(reshape2)
d <- data.frame(
year=factor(sample(2010:2014, 400, replace=T)),
continent=factor(sample(c("EU", "US", "Asia"), 400, replace=T)),
gender=factor(sample(c("male", "female"), 400, replace=T)),
amount=sample(20:5000, 400, replace=T)
)
View(d)
ggplot(data=d, aes(x=year, y=amount)) + geom_bar(stat="identity")
ggplot(data=d, aes(x=year, y=amount, fill=year)) + geom_bar(stat="identity")
ggplot(data=d, aes(x=year, y=amount, fill=gender)) + geom_bar(stat="identity")
d <- with(d, d[order(year, gender),])
ggplot(data=d, aes(x=year, y=amount, fill=gender)) + geom_bar(stat="identity")
d <- with(d, d[order(year, gender, continent),])
ggplot(data=d, aes(x=continent, y=amount, fill=gender)) +
geom_bar(stat="identity") +
facet_grid(~year)
sample<-factor(c("S1","S2","S3","S4"))
ggplot(data=d, aes(x=continent, y=amount, fill=gender)) +
geom_bar(stat="identity") +
facet_grid(~year) +
labs(title="Customer Analysis 2010-2014", x="", y="$ Spent / Year", fill="Gender") +
theme(plot.title = element_text(size=25, margin=margin(t=20, b=20)))
View(d)
melt<-read.csv("jlp_recast.csv")
View(melt)
jlp<-read.csv("just_lps_products_source_pivot.csv")
View(jlp)
jlp<-jlp[,c(2:6,8,9)]
View(jlp)
rm(melt)
rm(sample)
melted<-melt(jlp)
View(melted)
gsub("S1_FPM","DNA_1",melted)
melted<-gsub("S1_FPM","S1",melted)
melted<-melt(jlp)
colnames(melted)<-c("product_name","gene","genome","sample","count")
melted$sample<-gsub("_FPM","",melted$sample)
View(melted)
is.na(melted$count)
summary(is.na(melted$count))
summary(is.zero(melted$count))
summary(which(melted$count==0))
which(melted$count==0)
length(which(melted$count==0))
melted <- with(melted, melted[order(product_name, genome, sample),])
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) +
geom_bar(stat="identity") +
facet_grid(~product_name)
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~product_name))
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~product_name)
?ggplot
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~product_name) + guides(fill=FALSE)
unique(melted$product_name)
order(unique(melted$product_name))
which(unique(melted$product_name) %in% "udp-3-o")
which(unique(melted$product_name))
which(unique(melted$product_name)=="udp-3-o-[3-hydroxymyristoyl] glucosamine n-acyltransferase")
which(unique(melted$product_name)=="udp-3-o-[3-hydroxymyristoyl] glucosamine n-acyltransferase"||"udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase")
which(unique(melted$product_name)=="udp-3-o-[3-hydroxymyristoyl] glucosamine n-acyltransferase || udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase")
which(unique(melted$product_name)=="udp-3-o-[3-hydroxymyristoyl] glucosamine n-acyltransferase" || unique(melted$product_name)=="udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase")
jlp<-read.csv("for first graph.csv")
View(jlp)
melted<-melt(jlp)
colnames(melted)<-c("product_name","gene","genome","sample","count")
melted$sample<-gsub("_FPM","",melted$sample)
melted <- with(melted, melted[order(product_name, genome, sample),])
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~gene) + guides(fill=FALSE)
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~gene) #+ guides(fill=FALSE)
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~gene) + guides(fill=FALSE)
jlp<-read.csv("just_lps_products_source_pivot.csv")
jlp<-jlp[,c(2:6,8,9)]
#just lpxC and lpxD
#jlp<-read.csv("for first graph.csv")
melted<-melt(jlp)
colnames(melted)<-c("product_name","gene","genome","sample","count")
melted$sample<-gsub("_FPM","",melted$sample)
melted <- with(melted, melted[order(product_name, genome, sample),])
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~gene) + guides(fill=FALSE)
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~product_name) + guides(fill=FALSE)
jlp<-read.csv("for second graph.csv")
melted<-melt(jlp)
colnames(melted)<-c("product_name","gene","genome","sample","count")
melted <- with(melted, melted[order(product_name, genome, sample),])
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~gene) + guides(fill=FALSE)
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~gene) #+ guides(fill=FALSE)
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
library(reshape2)
library(ggplot2)
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
View(filtered_annotated)
filtered_annotated <- filtered_annotated[,2:9]
View(filtered_annotated)
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
View(lps_path)
lowercase_lps<-data.frame(tolower(lps_path[,1]))
lps_path<-lowercase_lps
colnames(lps_path)<-"V1"
rm(lowercase_lps)
lps_genes<-data.frame(gene=lps_path[34:96,])
lps_products<-data.frame(product=lps_path[1:34,])
just_lps_products<-merge(x=sum_by_product_name,y=lps_products,by="product",all=F)
just_lps_genes<-merge(x=sum_by_gene_name,y=lps_genes,by="gene",all=F)
#for polyamines####
polyamines<-read.table("polyamine-search-list",sep="\t",comment.char = "#")
polyamines<-data.frame(tolower(polyamines[,1]))
colnames(polyamines)<-"V1"
polyamines<-unique(polyamines)
poly_product<-data.frame(product=polyamines$V1[1:88])
poly_genes<-data.frame(gene=polyamines$V1[89:203])
just_poly_products<-merge(x=sum_by_product_name,y=poly_product,all=F)
just_poly_genes<-merge(x=sum_by_gene_name,y=poly_genes,all=F)
poly_annot<-read.table("polyamine_list_annotation",header = T,sep = ";",strip.white = T)
View(poly_annot)
View(filtered_annotated)
library("KEGGREST", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("KEGGgraph", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("KEGG.db", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:KEGG.db", unload=TRUE)
detach("package:KEGGgraph", unload=TRUE)
head(keggConv("genes", "ncbi-geneid:3113320"))
View(filtered_annotated)
keggConv("genes","ncbi-geneid:C817_05797")
keggConv("genes","ncbi-proteinid:C817_05797")
View(sum_by_gene_name)
keggConv("genes","genes:aad")
keggConv("genes","aad")
listDatabases()
keggFind("pathway","add")
keggFind("pathway","aad")
keggFind("ko","aad")
View(just_lps_genes)
View(just_lps_products)
View(poly_annot)
keggFind("ko","[EC:1.2.1.3]")
keggFind("ko","[EC:1.2.1.3]")[1]
keggFind("ko","[EC:1.2.1.3]")[[1]
]
keggFind("ko","[EC:1.2.1.3]")[[1]]
keggFind("ko","[EC:1.2.1.3]")->thing
name(thing)
names(things)
names(thing)
keggFind("pathway","[EC:1.2.1.3]")->thing
thing
keggFind("ko","[EC:1.2.1.3]")->thing
keggFind("pathway",names(thing))
keggFind("pathway","K00128")
keggLink("pathway",names(thing))
keggLink("pathway",names(thing))->thing2
thing2[5]
thing2[[5]]
library(stringi)
str(thing2)
gsub("path:","",thing2)
gsub("path:","",thing2)[[]]
gsub("path:","",thing2)->thing2
keggLink("pathway",names(thing))->thing2
thing2
keggLink("pathway",names(thing))->thing2
thing2<-as.data.frame(thing2)
View(thing2)
keggLink("pathway",names(thing))->thing2
thing2[grep("map",thing2)]
thing2[grep("map",thing2)]->thing2
setwd("/Users/Scott/tophat-bacteria/scripts/R-interactive")
system(command = "cuffnorm-pathways.sh")
system(command = "./cuffnorm-pathways.sh")
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
temp<-read.table("id_to_ecnumber.tab")
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
View(filtered_annotated)
patric_annotation <- read.delim("all.PATRIC.cds.tab")
with_pathways<-merge(x=filtered_annotated,y=patric_annotation[,c("refseq_locus_tag","pathway")],by.x="tracking_id",by.y="refseq_locus_tag")
View(with_pathways)
with_pathways<-with_pathways[,grep(".+",pathways)]
attach(with_pathways)
with_pathways<-with_pathways[,grep(".+",pathways)]
with_pathways<-with_pathways[,grep(".+",pathway)]
attach(with_pathways)
with_pathways<-with_pathways[,grep(".+",pathway)]
with_pathways<-with_pathways[grep(".+",pathway),]
?attach
detach(with_pathways)
with_pathways<-with_pathways[grep(".+",pathway),]
View(with_pathways)
melted<-melt(with_pathways)
library(reshape2)
melted<-melt(with_pathways)
View(melted)
?melt
install.packages("tidyr")
library(tidyr)
with_pathways<-separate_rows(with_pathways, pathway, sep = ";")
View(with_pathways)
sum_by_kegg_pathway<-rowsum(with_pathways[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")],group = pathway)
sum_by_kegg_pathway<-rowsum(with_pathways[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")],group = with_pathways$pathway)
View(sum_by_kegg_pathway)
View(with_pathways)
View(sum_by_kegg_pathway)
sum_by_kegg_pathway$sum<-rowSums(with_pathways[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")])
sum_by_kegg_pathway$sum<-rowSums(sum_by_kegg_pathway[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")])
View(sum_by_kegg_pathway)
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum<mean(sum_by_kegg_pathway$sum),]
mean(sum_by_kegg_pathway$sum)
sum_by_kegg_pathway<-rowsum(with_pathways[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")],group = with_pathways$pathway)
?separate_rows
is.na(sum_by_kegg_pathway$S1_FPM)
!is.na(sum_by_kegg_pathway$S1_FPM)
sum_by_kegg_pathway<-sum_by_kegg_pathway[!is.na(sum_by_kegg_pathway$S1_FPM),]
sum_by_kegg_pathway$sum<-rowSums(sum_by_kegg_pathway[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")])
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum<mean(sum_by_kegg_pathway$sum),]
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum<median(sum_by_kegg_pathway$sum),]
View(shortened)
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum>median(sum_by_kegg_pathway$sum),]
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum>mean(sum_by_kegg_pathway$sum),]
View(shortened)
top_forty<-sum_by_kegg_pathway[order(sum_by_kegg_pathway$sum)[1:40],]
View(top_forty)
top_forty<-sum_by_kegg_pathway[order(sum_by_kegg_pathway$sum,decreasing = T)[1:40],]
View(top_forty)
grep(".+Lipo.+",row.names(sum_by_kegg_pathway))
sum_by_kegg_pathway[64,]
sum_by_kegg_pathway[103,]
