i=1
for (i in (length(medians_pcr[,1])-1)) {
temp1 = as.matrix(medians_pcr[i,])
j = i+1
if (i == 1) {
for (j in (length(medians_pcr[,1])-1)) {
temp2 = as.matrix(medians_pcr[j,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(medians_pcr[j,])))
print(cor.test(temp1,temp2))
}
if (i == 2) {
temp2 = as.matrix(medians_pcr[3,])
print(cor.test(temp1,temp2))
}
i=1
for (i in (length(medians_pcr[,1])-1)) {
temp1 = as.matrix(medians_pcr[i,])
j = i+1
if (i == 1) {
for (j in (length(medians_pcr[,1])-1)) {
temp2 = as.matrix(medians_pcr[j,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(medians_pcr[j,])))
print(cor.test(temp1,temp2))
}
if (i == 2) {
temp2 = as.matrix(medians_pcr[3,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(medians_pcr[j,])))
print(cor.test(temp1,temp2))
}
print(medians_pcr)
1:length(medians_pcr[,1])
i=1
for (i in i:(length(medians_pcr[,1])-1)) {
temp1 = as.matrix(medians_pcr[i,])
j = i+1
if (i == 1) {
for (j in j:(length(medians_pcr[,1])-1)) {
temp2 = as.matrix(medians_pcr[j,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(medians_pcr[j,])))
print(cor.test(temp1,temp2))
}
if (i == 2) {
temp2 = as.matrix(medians_pcr[3,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(medians_pcr[j,])))
print(cor.test(temp1,temp2))
}
i=1
j = i+1
j
j:(length(medians_pcr[,1])-1)
j:(length(medians_pcr[,1]))
i=1
for (i in i:(length(medians_pcr[,1])-1)) {
temp1 = as.matrix(medians_pcr[i,])
j = i+1
if (i == 1) {
for (j in j:(length(medians_pcr[,1]))) {
temp2 = as.matrix(medians_pcr[j,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(medians_pcr[j,])))
print(cor.test(temp1,temp2))
}
if (i == 2) {
temp2 = as.matrix(medians_pcr[3,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(medians_pcr[j,])))
print(cor.test(temp1,temp2))
}
medians_pcr <- data.frame(row.names(c("gene1","gene2","gene3")),rbind(rnorm(4),rnorm(4),rnorm(4)))
rnorm(4)
medians_pcr <- data.frame(row.names(c("gene1","gene2","gene3")),rbind(rnorm(4),rnorm(4),rnorm(4)))
View(just_lps_products)
colnames(just_lps_products) = c("s+h+","s-h+","s+h-","s-h-")
View(sum_by_gene_name)
View(sum_by_product_name)
colnames(sum_by_product_name)<-c("product","s+h+","s-h+","s+h-","s-h-")
View(sum_by_product_name)
colnames(sum_by_gene_name)<-c("gene","s+h+","s-h+","s+h-","s-h-")
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
lowercase_lps<-data.frame(tolower(lps_path[,1]))
lps_path<-lowercase_lps
colnames(lps_path)<-"V1"
rm(lowercase_lps)
lps_genes<-data.frame(gene=lps_path[34:96,])
lps_products<-data.frame(product=lps_path[1:34,])
just_lps_products<-merge(x=sum_by_product_name,y=lps_products,by="product",all=F)
just_lps_genes<-merge(x=sum_by_gene_name,y=lps_genes,by="gene",all=F)
lps_annot=read.table("LPS_list_annotation",header = T,sep = ";",strip.white = T,quote = "")
lps_annot$product <- tolower(lps_annot$product)
just_lps_products_annot <- merge(x=lps_annot,y=just_lps_products,by="product",all.x=F,all.y=T)
View(just_lps_products)
View(just_lps_genes)
?row
row(just_lps_products)
?all
row_sub = apply(just_lps_products, function(row), all( row != 0))
row_sub = apply(just_lps_products, function(row) all( row != 0))
row_sub = apply(just_lps_products, 1, function(row) all( row != 0))
row_sub
row_sub = apply(just_lps_products, 1, function(row) all(row !=0 ))
row_sub = apply(just_lps_products, 1, function(row) any(row !=0 ))
row_sub
row_sub = apply(just_lps_products, 1, function(row) any(row ==0 ))
row_sub
just_lps_products[just_lps_products==0]<-NA
View(just_lps_products)
na.omit(just_lps_products)
lpsProductsNoZeroes = na.omit(just_lps_products)
lpsProductsNoZeroes = lpsProductsNoZeroes[,c('product','s+h-','s-h-','s+h+','s-h+')]
View(lpsProductsNoZeroes)
i=1
j=1
for (i in i:(length(medians_pcr[,1]))) {
for (j in j:(length(lpsProductsNoZeroes[,1]))) {
temp1 = as.matrix(medians_pcr[i,])
temp2 = as.matrix(lpsProductsNoZeroes[j,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(lpsProductsNoZeroes[j,])))
print(cor.test(temp1,temp2))
}
lpsProductsNoZeroes[j,]
medians_pcr[i,]
row.names(lpsProductsNoZeroes) = lpsProductsNoZeroes[,'product']
lpsProductsNoZeroes = na.omit(just_lps_products)
row.names(lpsProductsNoZeroes) = lpsProductsNoZeroes[,'product']
lpsProductsNoZeroes = lpsProductsNoZeroes[,c('s+h-','s-h-','s+h+','s-h+')]
i=1
j=1
for (i in i:(length(medians_pcr[,1]))) {
for (j in j:(length(lpsProductsNoZeroes[,1]))) {
temp1 = as.matrix(medians_pcr[i,])
temp2 = as.matrix(lpsProductsNoZeroes[j,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(lpsProductsNoZeroes[j,])))
print(cor.test(temp1,temp2))
}
i=1
for (i in i:(length(medians_pcr[,1]))) {
j=1
for (j in j:(length(lpsProductsNoZeroes[,1]))) {
temp1 = as.matrix(medians_pcr[i,])
temp2 = as.matrix(lpsProductsNoZeroes[j,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(lpsProductsNoZeroes[j,])))
print(cor.test(temp1,temp2))
}
medians_pcr
lpsProductsNoZeroes
setwd("~/megahit_output_dedup")
read.delim("covstats.txt")
read.delim("covstats.txt")->covstats
mean(covstats$Avg_fold)
mean(covstats$Length)
plot(density(covstats$Avg_fold))
summary(covstats$Avg_fold)
summary(covstats$Length)
summary(covstats$Covered_percent)
summary(covstats$Plus_reads)
summary(covstats$Avg_fold)
setwd("/Users/Scott/tophat-bacteria/scripts/R-interactive")
# The purpose of this is to correlate gene expression of the bacteria
# with gene expression of the mouse host
# Specifically genes in the LPS pathway (for bacteria)
# And TLR2/4, NFk-B (for mouse host)
library(RColorBrewer)
library(reshape2)
library(tidyr)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
#setup####
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)<-c("product","s+h+","s-h+","s+h-","s-h-")
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)<-c("gene","s+h+","s-h+","s+h-","s-h-")
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
#for LPS pathway####
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
lowercase_lps<-data.frame(tolower(lps_path[,1]))
lps_path<-lowercase_lps
colnames(lps_path)<-"V1"
rm(lowercase_lps)
lps_genes<-data.frame(gene=lps_path[34:96,])
lps_products<-data.frame(product=lps_path[1:34,])
just_lps_products<-merge(x=sum_by_product_name,y=lps_products,by="product",all=F)
just_lps_genes<-merge(x=sum_by_gene_name,y=lps_genes,by="gene",all=F)
lps_annot=read.table("LPS_list_annotation",header = T,sep = ";",strip.white = T,quote = "")
lps_annot$product <- tolower(lps_annot$product)
just_lps_products_annot <- merge(x=lps_annot,y=just_lps_products,by="product",all.x=F,all.y=T)
# mouse expression setup ####
tlr4 <- read.delim("tlr4-pcr-data.tab")
source('~/tophat-bacteria/scripts/R-interactive/regression analysis and more.R')
View(medians_pcr)
View(lpsProductsNoZeroes)
plot(medians_pcr["tlr4",],lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase"])
plot(medians_pcr["tlr4",],lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",])
xyplot(medians_pcr["tlr4",],lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",])
medians_pcr["tlr4",]
lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]
unlist(medians_pcr["tlr4",])
medians_pcr[["tlr4",]]
medians_pcr[["tlr4"],]
unlist(medians_pcr["tlr4",])
plot(unlist(medians_pcr["tlr4",]),unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]))
plot(unlist(medians_pcr["tlr4",]),unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]),xlab="Relative expression of TLR4",ylab="Relative expression of udpHNacetylGD")
model<-lm.fit(unlist(medians_pcr["tlr4",]),unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]))
model<-lm.fit(medians_pcr["tlr4",],lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",])
model<-lm(medians_pcr["tlr4",],lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",])
model$coefficients
model$residuals
model$effects
model$terms
summary(model)
model<-lm(unlist(medians_pcr["tlr4",]),unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]))
model<-lm(unlist(medians_pcr["tlr4",]) ~ unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]))
model
summary(model)
model(medians_pcr["tlr4",] ~ lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",])
model<-lm(medians_pcr["tlr4",] ~ lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",])
model<-lm(medians_pcr ~ lpsProductsNoZeroes)
unlist(medians_pcr)
unlist(lpsProductsNoZeroes)
lm(unlist(medians_pcr) ~unlist(lpsProductsNoZeroes) )
model<-lm(unlist(unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]) ~ medians_pcr["tlr4",]))
model<-lm(unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]) ~ unlist(medians_pcr["tlr4",]))
abline(40433,4943,col="blue")
plot(unlist(medians_pcr["tlr2",]),unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]),xlab="Relative expression of TLR2",ylab="Relative expression of udpHNacetylGD")
model<-lm(unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]) ~ unlist(medians_pcr["tlr2",]))
summary(model)
abline(29249,15696,col="blue")
model$coefficients
model$coefficients[1]
model$coefficients[[1]]
model$coefficients[[2]]
abline(model$coefficients[[1]],model$coefficients[[2]],col="blue")
plot(unlist(medians_pcr["tlr2",]),unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]),xlab="Relative expression of TLR2",ylab="Relative expression of udpHNacetylGD")
model<-lm(unlist(lpsProductsNoZeroes["udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase",]) ~ unlist(medians_pcr["tlr2",]))
abline(model$coefficients[[1]],model$coefficients[[2]],col="blue")
install.packages("devtools")
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
library(reshape2)
library(ggplot2)
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
lps_genes<-data.frame(gene=lps_path[34:96,])
lowercase_lps<-data.frame(tolower(lps_path[,1]))
lps_path<-lowercase_lps
colnames(lps_path)<-"V1"
rm(lowercase_lps)
lps_products<-data.frame(product=lps_path[1:34,])
just_lps_products<-merge(x=filtered_annotated,y=lps_products,by.x="product_name",by.y="product",all=F)
just_lps_genes<-merge(x=filtered_annotated,y=lps_genes,by="gene",all=F)
x=paste(just_lps_products$tracking_id,sep=",",collapse=",")
x
feature_table = read.delim("FeatureTable.txt",colClasses = "character")
View(feature_table)
just_lps_products<-merge(x=just_lps_products,y=feature_table[,c("Genome","RefSeq.Locus.Tag")],by.x="tracking_id",by.y="RefSeq.Locus.Tag",all.x=T,all.y=F)
just_lps_products[54,]$Genome<-"Unknown"
jlp<-read.csv("for second graph.csv")
View(jlp)
melted<-melt(jlp)
colnames(melted)<-c("product_name","gene","genome","sample","count")
melted$sample<-gsub("_FPM","",melted$sample)
melted <- with(melted, melted[order(product_name, genome, sample),])
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~gene) #+ guides(fill=FALSE)
genome_to_feature <- read.delim("genome-name_to_refseq-locus-tag")
polyamines<-read.table("polyamine-search-list",sep="\t",comment.char = "#")
polyamines<-data.frame(tolower(polyamines[,1]))
colnames(polyamines)<-"V1"
polyamines<-unique(polyamines)
poly_product<-data.frame(product=polyamines$V1[1:88])
poly_genes<-data.frame(gene=polyamines$V1[89:203])
just_poly_products<-merge(x=sum_by_product_name,y=poly_product,all=F)
just_poly_genes<-merge(x=sum_by_gene_name,y=poly_genes,all=F)
#getting more annotation for poly####
poly_annot<-read.table("polyamine_list_annotation",header = T,sep = ";",strip.white = T)
poly_annot$product <- tolower(poly_annot$product)
just_poly_products_annot <- merge(x=poly_annot,y=just_poly_products)
View(just_poly_products_annot)
attach(just_poly_products_annot)
important<-just_poly_products_annot[ecnumber %in% c("[EC:3.5.1.53]","[EC:4.1.1.96]")]
important<-just_poly_products_annot[ecnumber %in% c("[EC:3.5.1.53]","[EC:4.1.1.96]"),]
View(important)
View(polyamines)
View(filtered_annotated)
View(just_poly_products)
View(just_poly_products_annot)
View(important)
View(filtered_annotated)
important2 <- merge(x=important,y=filtered_annotated,by.x="product",by.y="product_name")
View(important2)
important2 <- merge(x=important,y=filtered_annotated,by.x="product",by.y="product_name",all.y = T)
important2 <- merge(x=important,y=filtered_annotated,by.x="product",by.y="product_name",all.x=T)
View(important2)
View(important)
important2 <- merge(x=important[,1:4],y=filtered_annotated,by.x="product",by.y="product_name",all.x=T)
View(important2)
View(jlp)
View(important2)
head(genome_to_feature)
important <- merge(x=important2[,c(1,3,5:9)],y=genome_to_feature,by.x="tracking_id",by.y="refseq_locus_tag")
View(important)
melted<-melt(important)
View(melted)
melted<-melt(important[,2:])
melted<-melt(important[,2:8])
colnames(melted)<-c("product_name","gene","genome","sample","count")
View(melted)
melted$sample<-gsub("_FPM","",melted$sample)
melted <- with(melted, melted[order(product_name, genome, sample),])
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~gene) #+ guides(fill=FALSE)
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~gene) + guides(fill=FALSE)
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~product_name) + guides(fill=FALSE)
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~product_name) #+ guides(fill=FALSE)
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~product_name) + guides(fill=FALSE)
butanoate_annot=read.table("butanoate_list_annotation",header = T,sep = ";",strip.white = T,quote = "")
butanoate_path<-data.frame(unique(butanoate_annot$product))
lowercase_butanoate<-data.frame(tolower(butanoate_path[,1]))
butanoate_path<-lowercase_butanoate
colnames(butanoate_path)<-"V1"
rm(lowercase_butanoate)
View(butanoate_annot)
View(butanoate_path)
just_butanoate_products<-merge(x=sum_by_product_name,y=butanoate_path,by.x="product",by.y="V1",all=F)
butanoate_annot$product <- tolower(butanoate_annot$product)
just_butanoate_products_annot <- merge(x=butanoate_annot,y=just_butanoate_products,by="product",all.x=F,all.y=T)
View(just_butanoate_products_annot)
detach(just_poly_products_annot)
attach(just_butanoate_products_annot)
important<-just_poly_products_annot[ecnumber %in% c("[EC:2.7.2.7]","[EC:2.3.1.19]"),]
View(important)
important<-just_butanoate_products_annot[ecnumber %in% c("[EC:2.7.2.7]","[EC:2.3.1.19]"),]
View(important)
View(important2)
important2 <- merge(x=important[,1:4],y=filtered_annotated,by.x="product",by.y="product_name",all.x=T)
View(important2)
important <- merge(x=important2[,c(1,3,5:9)],y=genome_to_feature,by.x="tracking_id",by.y="refseq_locus_tag")
View(important)
melted<-melt(important[,2:8])
colnames(melted)<-c("product_name","gene","genome","sample","count")
melted$sample<-gsub("_FPM","",melted$sample)
melted <- with(melted, melted[order(product_name, genome, sample),])
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~product_name) #+ guides(fill=FALSE)
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~product_name) + guides(fill=FALSE)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
library(reshape2)
library(ggplot2)
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
butanoate_annot=read.table("butanoate_list_annotation",header = T,sep = ";",strip.white = T,quote = "")
butanoate_path<-data.frame(unique(butanoate_annot$product))
lowercase_butanoate<-data.frame(tolower(butanoate_path[,1]))
butanoate_path<-lowercase_butanoate
colnames(butanoate_path)<-"V1"
rm(lowercase_butanoate)
just_butanoate_products<-merge(x=sum_by_product_name,y=butanoate_path,by.x="product",by.y="V1",all=F)
butanoate_annot$product <- tolower(butanoate_annot$product)
just_butanoate_products_annot <- merge(x=butanoate_annot,y=just_butanoate_products,by="product",all.x=F,all.y=T)
attach(just_butanoate_products_annot)
genome_to_feature <- read.delim("genome-name_to_refseq-locus-tag")
View(just_butanoate_products_annot)
View(just_butanoate_products)
source('~/tophat-bacteria/scripts/R-interactive/regression analysis and more.R')
cd14 <- read.delim("CD14-pcr-data.tab")
cd14$Series <- factor(cd14$Series,order)
boxplot(cd14$Values~cd14$Series) -> cd14box
boxplot(tlr4$Values~tlr4$Series) -> tlr4box
boxplot(tlr2$Values~tlr2$Series) -> tlr2box
boxplot(nfkb$Values~nfkb$Series) -> nfkbbox
boxplot(irak4$Values~irak4$Series) -> irak4box
boxplot(cd14$Values~cd14$Series) -> cd14box
cd14box$stats[3,] -> median_cd14
cd14box$stats[3,] -> medians_cd14
medians_pcr = data.frame(
row.names = c("nfkb","tlr2","tlr4","irak4","cd14"),
rbind(medians_nfkb,medians_tlr2,medians_tlr4,medians_irak4,
medians_cd14)
)
colnames(medians_pcr) = order
just_lps_products[just_lps_products==0]<-NA
lpsProductsNoZeroes = na.omit(just_lps_products)
row.names(lpsProductsNoZeroes) = lpsProductsNoZeroes[,'product']
lpsProductsNoZeroes = lpsProductsNoZeroes[,c('s+h-','s-h-','s+h+','s-h+')]
i=1
for (i in i:(length(medians_pcr[,1]))) {
j=1
for (j in j:(length(lpsProductsNoZeroes[,1]))) {
temp1 = as.matrix(medians_pcr[i,])
temp2 = as.matrix(lpsProductsNoZeroes[j,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(lpsProductsNoZeroes[j,])))
print(cor.test(temp1,temp2))
}
View(lpsProductsNoZeroes)
View(just_lps_products_annot)
row.names(lpsProductsNoZeroes) = c("waaL/rfaL","lpxD","lpxC")
i=1
for (i in i:(length(medians_pcr[,1]))) {
j=1
for (j in j:(length(lpsProductsNoZeroes[,1]))) {
temp1 = as.matrix(medians_pcr[i,])
temp2 = as.matrix(lpsProductsNoZeroes[j,])
print(paste(row.names(medians_pcr[i,]),"vs.",row.names(lpsProductsNoZeroes[j,])))
print(cor.test(temp1,temp2))
}
i=1
for (i in i:(length(medians_pcr[,1]))) {
j=1
for (j in j:(length(lpsProductsNoZeroes[,1]))) {
temp1 = as.matrix(medians_pcr[i,])
temp2 = as.matrix(lpsProductsNoZeroes[j,])
print(paste("Does",row.names(medians_pcr[i,]),"correlate with",row.names(lpsProductsNoZeroes[j,])),"?")
print(cor.test(temp1,temp2))
}
i=1
for (i in i:(length(medians_pcr[,1]))) {
j=1
for (j in j:(length(lpsProductsNoZeroes[,1]))) {
temp1 = as.matrix(medians_pcr[i,])
temp2 = as.matrix(lpsProductsNoZeroes[j,])
print(paste("Does",row.names(medians_pcr[i,]),"correlate with",row.names(lpsProductsNoZeroes[j,]),"?"))
print(cor.test(temp1,temp2))
}
medians_pcr
lpsProductsNoZeroes
plot(unlist(medians_pcr["tlr2",]),unlist(lpsProductsNoZeroes["lpxC]),xlab="Relative expression of TLR2",ylab="Relative expression of lpxC")
plot(unlist(medians_pcr["tlr2",]),unlist(lpsProductsNoZeroes["lpxC",]),xlab="Relative expression of TLR2",ylab="Relative expression of lpxC")
plot(unlist(medians_pcr["tlr4",]),unlist(lpsProductsNoZeroes["lpxD",]),xlab="Relative expression of TLR4",ylab="Relative expression of lpxD")
model<-lm(unlist(lpsProductsNoZeroes["lpxD",]) ~ unlist(medians_pcr["tlr4",]))
model$coefficients
model$coefficients[1]
model$coefficients[2]
abline(model$coefficients[[1]],model$coefficients[[2]],col="blue")
plot(unlist(medians_pcr["tlr2",]),unlist(lpsProductsNoZeroes["lpxC",]),xlab="Relative expression of TLR2",ylab="Relative expression of lpxC")
model<-lm(unlist(lpsProductsNoZeroes["lpxC",]) ~ unlist(medians_pcr["tlr2",]))
abline(model$coefficients[[1]],model$coefficients[[2]],col="blue")
plot(unlist(medians_pcr["tlr4",]),unlist(lpsProductsNoZeroes["lpxD",]),xlab="Relative expression of TLR4",ylab="Relative expression of lpxD")
model<-lm(unlist(lpsProductsNoZeroes["lpxD",]) ~ unlist(medians_pcr["tlr4",]))
abline(model$coefficients[[1]],model$coefficients[[2]],col="blue")
plot(unlist(medians_pcr["tlr4",]),unlist(lpsProductsNoZeroes["lpxC",]),xlab="Relative expression of TLR4",ylab="Relative expression of lpxC")
model<-lm(unlist(lpsProductsNoZeroes["lpxC",]) ~ unlist(medians_pcr["tlr4",]))
abline(model$coefficients[[1]],model$coefficients[[2]],col="blue")
plot(unlist(medians_pcr["tlr2",]),unlist(lpsProductsNoZeroes["lpxD",]),xlab="Relative expression of TLR2",ylab="Relative expression of lpxD")
model<-lm(unlist(lpsProductsNoZeroes["lpxD",]) ~ unlist(medians_pcr["tlr2",]))
abline(model$coefficients[[1]],model$coefficients[[2]],col="blue")
plot(unlist(medians_pcr["tlr2",]),unlist(lpsProductsNoZeroes["lpxC",]),xlab="Relative expression of TLR2",ylab="Relative expression of lpxC")
model<-lm(unlist(lpsProductsNoZeroes["lpxC",]) ~ unlist(medians_pcr["tlr2",]))
abline(model$coefficients[[1]],model$coefficients[[2]],col="blue")
library(reshape2)
library(tidyr)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
#setup####
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
patric_annotation <- read.delim("refseq_tag_to_pathway.tab")
with_pathways<-merge(x=filtered_annotated,y=patric_annotation[,c("refseq_locus_tag","pathway")],by.x="tracking_id",by.y="refseq_locus_tag")
with_pathways<-with_pathways[grep(".+",with_pathways$pathway),]
with_pathways<-separate_rows(with_pathways, pathway, sep = ";")
sum_by_kegg_pathway<-rowsum(with_pathways[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")],group = with_pathways$pathway)
sum_by_kegg_pathway<-sum_by_kegg_pathway[!is.na(sum_by_kegg_pathway$S1_FPM),]
sum_by_kegg_pathway$sum<-rowSums(sum_by_kegg_pathway[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")])
#formatting for stupid bubble plot, which i bet could be done in R
sum_by_kegg_pathway$Name<-row.names(sum_by_kegg_pathway)
View(sum_by_kegg_pathway)
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum>mean(sum_by_kegg_pathway$sum),]
shortened<-shortened[order(shortened$sum , decreasing = T),]
shortened<-shortened[,c("Name","S1_FPM","S2_FPM","S3_FPM","S4_FPM")]
setwd("~/tophat-bacteria/scripts/R-interactive/")
View(shortened)
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum>mean(sum_by_kegg_pathway$sum),]
shortened<-shortened[order(shortened$sum , decreasing = T),]
shortened<-shortened[,c("Name","S3_FPM","S4_FPM","S1_FPM","S3_FPM")]
View(shortened)
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum>mean(sum_by_kegg_pathway$sum),]
shortened<-shortened[order(shortened$sum , decreasing = T),]
shortened<-shortened[,c("Name","S3_FPM","S4_FPM","S1_FPM","S2_FPM")]
View(shortened)
colnames(shortened)=c("Name","S+H- (Control)","S-H- (SMAD3 Knockout)","S+H+ (H. hepaticus only)","S-H+ (Combined)")
View(shortened)
write.table(shortened,"sum_by_kegg_pathway_above_mean.tab", sep = "\t", quote = T,row.names = F)
system("./bubble.sh sum_by_kegg_pathway_above_mean.tab Figure7")
system("cpanm install SVG")
system("cp sum_by_kegg_pathway.pdf /Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
system("cp ./sum_by_kegg_pathway.pdf /Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out/")
system("cp sum_by_kegg_pathway.pdf /Users/Scott/Google\ Drive/Hurwitz\ Lab/cuffnorm-out/")
system("cp sum_by_kegg_pathway.pdf '/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out/'")
system("cp sum_by_kegg_pathway.pdf '/Users/Scott/Google Drive/Hurwitz Lab/manuscripts/'")
system("cp Figure7.pdf '/Users/Scott/Google Drive/Hurwitz Lab/manuscripts/'")
