timevar = "product_name",
idvar = "Genome",
direction = "wide")
View(jlp_wide)
jlp_wide <- reshape(just_lps_products[which(just_lps_products$product_name="3-deoxy-d-manno-octulosonic-acid transferase"),c("Genome","product_name","S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum")],
jlp_wide <- reshape(just_lps_products[which(just_lps_products$product_name=="3-deoxy-d-manno-octulosonic-acid transferase"),c("Genome","product_name","S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum")],
v.names = c("S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum"),
timevar = "Genome",
idvar = "product_name",
direction = "wide")
View(jlp_wide)
library(reshape2)
melted <- melt(just_lps_products)
View(melted)
jlp_recast <- dcast(melted,melted$product_name ~ melted$Genome ~ melted$variable)
jlp_recast <- acast(melted,melted$product_name ~ melted$Genome ~ melted$variable)
jlp_recast <- dcast(melted,melted$product_name ~ melted$variable)
View(jlp_recast)
jlp_recast <- dcast(melted,melted$product_name ~ melted$Genome)
jlp_recast <- dcast(melted,melted$product_name ~ melted$Genome,sum)
View(jlp_recast)
jlp_recast <- dcast(melted,melted$product_name + melted$variable ~ melted$Genome,sum)
View(jlp_recast)
write.csv(jlp_recast,"jlp_recast.csv",row.names = F)
jlp_wide <- reshape(just_lps_products,c("Genome","product_name","S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum")],
v.names = c("S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum"),
timevar = "Genome",
idvar = "product_name",
direction = "wide")
jlp_wide <- reshape(just_lps_products[c("Genome","product_name","S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum")],
v.names = c("S1_FPM","S2_FPM","S3_FPM","S4_FPM","sum"),
timevar = "Genome",
idvar = "product_name",
direction = "wide")
View(jlp_wide)
write.csv(just_lps_products,"just_lps_products_source_pivot.csv",row.names = F)
write.csv(jlp_wide,"jlp_wide.csv")
library(ggplot2)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
library(reshape2)
d <- data.frame(
year=factor(sample(2010:2014, 400, replace=T)),
continent=factor(sample(c("EU", "US", "Asia"), 400, replace=T)),
gender=factor(sample(c("male", "female"), 400, replace=T)),
amount=sample(20:5000, 400, replace=T)
)
View(d)
ggplot(data=d, aes(x=year, y=amount)) + geom_bar(stat="identity")
ggplot(data=d, aes(x=year, y=amount, fill=year)) + geom_bar(stat="identity")
ggplot(data=d, aes(x=year, y=amount, fill=gender)) + geom_bar(stat="identity")
d <- with(d, d[order(year, gender),])
ggplot(data=d, aes(x=year, y=amount, fill=gender)) + geom_bar(stat="identity")
d <- with(d, d[order(year, gender, continent),])
ggplot(data=d, aes(x=continent, y=amount, fill=gender)) +
geom_bar(stat="identity") +
facet_grid(~year)
sample<-factor(c("S1","S2","S3","S4"))
ggplot(data=d, aes(x=continent, y=amount, fill=gender)) +
geom_bar(stat="identity") +
facet_grid(~year) +
labs(title="Customer Analysis 2010-2014", x="", y="$ Spent / Year", fill="Gender") +
theme(plot.title = element_text(size=25, margin=margin(t=20, b=20)))
View(d)
melt<-read.csv("jlp_recast.csv")
View(melt)
jlp<-read.csv("just_lps_products_source_pivot.csv")
View(jlp)
jlp<-jlp[,c(2:6,8,9)]
View(jlp)
rm(melt)
rm(sample)
melted<-melt(jlp)
View(melted)
gsub("S1_FPM","DNA_1",melted)
melted<-gsub("S1_FPM","S1",melted)
melted<-melt(jlp)
colnames(melted)<-c("product_name","gene","genome","sample","count")
melted$sample<-gsub("_FPM","",melted$sample)
View(melted)
is.na(melted$count)
summary(is.na(melted$count))
summary(is.zero(melted$count))
summary(which(melted$count==0))
which(melted$count==0)
length(which(melted$count==0))
melted <- with(melted, melted[order(product_name, genome, sample),])
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) +
geom_bar(stat="identity") +
facet_grid(~product_name)
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~product_name))
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~product_name)
?ggplot
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~product_name) + guides(fill=FALSE)
unique(melted$product_name)
order(unique(melted$product_name))
which(unique(melted$product_name) %in% "udp-3-o")
which(unique(melted$product_name))
which(unique(melted$product_name)=="udp-3-o-[3-hydroxymyristoyl] glucosamine n-acyltransferase")
which(unique(melted$product_name)=="udp-3-o-[3-hydroxymyristoyl] glucosamine n-acyltransferase"||"udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase")
which(unique(melted$product_name)=="udp-3-o-[3-hydroxymyristoyl] glucosamine n-acyltransferase || udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase")
which(unique(melted$product_name)=="udp-3-o-[3-hydroxymyristoyl] glucosamine n-acyltransferase" || unique(melted$product_name)=="udp-3-o-[3-hydroxymyristoyl] n-acetylglucosamine deacetylase")
jlp<-read.csv("for first graph.csv")
View(jlp)
melted<-melt(jlp)
colnames(melted)<-c("product_name","gene","genome","sample","count")
melted$sample<-gsub("_FPM","",melted$sample)
melted <- with(melted, melted[order(product_name, genome, sample),])
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~gene) + guides(fill=FALSE)
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~gene) #+ guides(fill=FALSE)
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~gene) + guides(fill=FALSE)
jlp<-read.csv("just_lps_products_source_pivot.csv")
jlp<-jlp[,c(2:6,8,9)]
#just lpxC and lpxD
#jlp<-read.csv("for first graph.csv")
melted<-melt(jlp)
colnames(melted)<-c("product_name","gene","genome","sample","count")
melted$sample<-gsub("_FPM","",melted$sample)
melted <- with(melted, melted[order(product_name, genome, sample),])
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~gene) + guides(fill=FALSE)
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~product_name) + guides(fill=FALSE)
jlp<-read.csv("for second graph.csv")
melted<-melt(jlp)
colnames(melted)<-c("product_name","gene","genome","sample","count")
melted <- with(melted, melted[order(product_name, genome, sample),])
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~gene) + guides(fill=FALSE)
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~gene) #+ guides(fill=FALSE)
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
library(reshape2)
library(ggplot2)
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
View(filtered_annotated)
filtered_annotated <- filtered_annotated[,2:9]
View(filtered_annotated)
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
View(lps_path)
lowercase_lps<-data.frame(tolower(lps_path[,1]))
lps_path<-lowercase_lps
colnames(lps_path)<-"V1"
rm(lowercase_lps)
lps_genes<-data.frame(gene=lps_path[34:96,])
lps_products<-data.frame(product=lps_path[1:34,])
just_lps_products<-merge(x=sum_by_product_name,y=lps_products,by="product",all=F)
just_lps_genes<-merge(x=sum_by_gene_name,y=lps_genes,by="gene",all=F)
#for polyamines####
polyamines<-read.table("polyamine-search-list",sep="\t",comment.char = "#")
polyamines<-data.frame(tolower(polyamines[,1]))
colnames(polyamines)<-"V1"
polyamines<-unique(polyamines)
poly_product<-data.frame(product=polyamines$V1[1:88])
poly_genes<-data.frame(gene=polyamines$V1[89:203])
just_poly_products<-merge(x=sum_by_product_name,y=poly_product,all=F)
just_poly_genes<-merge(x=sum_by_gene_name,y=poly_genes,all=F)
poly_annot<-read.table("polyamine_list_annotation",header = T,sep = ";",strip.white = T)
View(poly_annot)
View(filtered_annotated)
library("KEGGREST", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("KEGGgraph", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("KEGG.db", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:KEGG.db", unload=TRUE)
detach("package:KEGGgraph", unload=TRUE)
head(keggConv("genes", "ncbi-geneid:3113320"))
View(filtered_annotated)
keggConv("genes","ncbi-geneid:C817_05797")
keggConv("genes","ncbi-proteinid:C817_05797")
View(sum_by_gene_name)
keggConv("genes","genes:aad")
keggConv("genes","aad")
listDatabases()
keggFind("pathway","add")
keggFind("pathway","aad")
keggFind("ko","aad")
View(just_lps_genes)
View(just_lps_products)
View(poly_annot)
keggFind("ko","[EC:1.2.1.3]")
keggFind("ko","[EC:1.2.1.3]")[1]
keggFind("ko","[EC:1.2.1.3]")[[1]
]
keggFind("ko","[EC:1.2.1.3]")[[1]]
keggFind("ko","[EC:1.2.1.3]")->thing
name(thing)
names(things)
names(thing)
keggFind("pathway","[EC:1.2.1.3]")->thing
thing
keggFind("ko","[EC:1.2.1.3]")->thing
keggFind("pathway",names(thing))
keggFind("pathway","K00128")
keggLink("pathway",names(thing))
keggLink("pathway",names(thing))->thing2
thing2[5]
thing2[[5]]
library(stringi)
str(thing2)
gsub("path:","",thing2)
gsub("path:","",thing2)[[]]
gsub("path:","",thing2)->thing2
keggLink("pathway",names(thing))->thing2
thing2
keggLink("pathway",names(thing))->thing2
thing2<-as.data.frame(thing2)
View(thing2)
keggLink("pathway",names(thing))->thing2
thing2[grep("map",thing2)]
thing2[grep("map",thing2)]->thing2
setwd("/Users/Scott/tophat-bacteria/scripts/R-interactive")
system(command = "cuffnorm-pathways.sh")
system(command = "./cuffnorm-pathways.sh")
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
temp<-read.table("id_to_ecnumber.tab")
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
View(filtered_annotated)
patric_annotation <- read.delim("all.PATRIC.cds.tab")
with_pathways<-merge(x=filtered_annotated,y=patric_annotation[,c("refseq_locus_tag","pathway")],by.x="tracking_id",by.y="refseq_locus_tag")
View(with_pathways)
with_pathways<-with_pathways[,grep(".+",pathways)]
attach(with_pathways)
with_pathways<-with_pathways[,grep(".+",pathways)]
with_pathways<-with_pathways[,grep(".+",pathway)]
attach(with_pathways)
with_pathways<-with_pathways[,grep(".+",pathway)]
with_pathways<-with_pathways[grep(".+",pathway),]
?attach
detach(with_pathways)
with_pathways<-with_pathways[grep(".+",pathway),]
View(with_pathways)
melted<-melt(with_pathways)
library(reshape2)
melted<-melt(with_pathways)
View(melted)
?melt
install.packages("tidyr")
library(tidyr)
with_pathways<-separate_rows(with_pathways, pathway, sep = ";")
View(with_pathways)
sum_by_kegg_pathway<-rowsum(with_pathways[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")],group = pathway)
sum_by_kegg_pathway<-rowsum(with_pathways[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")],group = with_pathways$pathway)
View(sum_by_kegg_pathway)
View(with_pathways)
View(sum_by_kegg_pathway)
sum_by_kegg_pathway$sum<-rowSums(with_pathways[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")])
sum_by_kegg_pathway$sum<-rowSums(sum_by_kegg_pathway[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")])
View(sum_by_kegg_pathway)
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum<mean(sum_by_kegg_pathway$sum),]
mean(sum_by_kegg_pathway$sum)
sum_by_kegg_pathway<-rowsum(with_pathways[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")],group = with_pathways$pathway)
?separate_rows
is.na(sum_by_kegg_pathway$S1_FPM)
!is.na(sum_by_kegg_pathway$S1_FPM)
sum_by_kegg_pathway<-sum_by_kegg_pathway[!is.na(sum_by_kegg_pathway$S1_FPM),]
sum_by_kegg_pathway$sum<-rowSums(sum_by_kegg_pathway[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")])
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum<mean(sum_by_kegg_pathway$sum),]
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum<median(sum_by_kegg_pathway$sum),]
View(shortened)
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum>median(sum_by_kegg_pathway$sum),]
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum>mean(sum_by_kegg_pathway$sum),]
View(shortened)
top_forty<-sum_by_kegg_pathway[order(sum_by_kegg_pathway$sum)[1:40],]
View(top_forty)
top_forty<-sum_by_kegg_pathway[order(sum_by_kegg_pathway$sum,decreasing = T)[1:40],]
View(top_forty)
grep(".+Lipo.+",row.names(sum_by_kegg_pathway))
sum_by_kegg_pathway[64,]
sum_by_kegg_pathway[103,]
library(reshape2)
library(tidyr)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
patric_annotation <- read.delim("refseq_tag_to_pathway.tab")
View(patric_annotation)
with_pathways<-merge(x=filtered_annotated,y=patric_annotation[,c("refseq_locus_tag","pathway")],by.x="tracking_id",by.y="refseq_locus_tag")
with_pathways<-with_pathways[grep(".+",pathway),]
with_pathways<-with_pathways[grep(".+",with_pathways$pathway),]
with_pathways<-separate_rows(with_pathways, pathway, sep = ";")
sum_by_kegg_pathway<-rowsum(with_pathways[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")],group = with_pathways$pathway)
sum_by_kegg_pathway<-sum_by_kegg_pathway[!is.na(sum_by_kegg_pathway$S1_FPM),]
sum_by_kegg_pathway$sum<-rowSums(sum_by_kegg_pathway[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")])
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum>mean(sum_by_kegg_pathway$sum),]
top_forty<-sum_by_kegg_pathway[order(sum_by_kegg_pathway$sum,decreasing = T)[1:40],]
grep("Lipo.+",row.names(top_forty))
top_fifty<-sum_by_kegg_pathway[order(sum_by_kegg_pathway$sum,decreasing = T)[1:50],]
grep("Lipo.+",row.names(top_fifty))
grep(".+Lipo.+",row.names(sum_by_kegg_pathway))
top_sixty_five<-sum_by_kegg_pathway[order(sum_by_kegg_pathway$sum,decreasing = T)[1:65],]
grep(".+Lipo.+",row.names(top_sixty_five))
shortened<-sum_by_kegg_pathway[order(sum_by_kegg_pathway$sum>mean(sum_by_kegg_pathway$sum)),]
write.csv(shortened,"sum_by_kegg_pathway_above_mean.csv")
write.csv(top_sixty_five,"sum_by_kegg_pathway_top_sixty_five.csv")
View(top_sixty_five)
View(shortened)
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum>mean(sum_by_kegg_pathway$sum),]
write.csv(shortened,"sum_by_kegg_pathway_above_mean.csv")
setwd("/Users/Scott/tophat-bacteria/scripts/R-interactive")
sum_by_kegg_pathway$Name<-row.names(sum_by_kegg_pathway)
sum_by_kegg_pathway<-sum_by_kegg_pathway[,c("Name","S1_FPM","S2_FPM","S3_FPM","S4_FPM")]
View(sum_by_kegg_pathway)
write.csv(shortened,"sum_by_kegg_pathway_above_mean.csv",quote = T,row.names = F)
write.csv(top_sixty_five,"sum_by_kegg_pathway_top_sixty_five.csv",quote = T,row.names = F)
sum_by_kegg_pathway$Name<-row.names(sum_by_kegg_pathway)
sum_by_kegg_pathway<-sum_by_kegg_pathway[,c("Name","S1_FPM","S2_FPM","S3_FPM","S4_FPM")]
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum>mean(sum_by_kegg_pathway$sum),]
sum<-rowSums(sum_by_kegg_pathway[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")])
sum_by_kegg_pathway$sum<-rowSums(sum_by_kegg_pathway[,c("S1_FPM","S2_FPM","S3_FPM","S4_FPM")])
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum>mean(sum_by_kegg_pathway$sum),]
shortened<-shortened[,c("Name","S1_FPM","S2_FPM","S3_FPM","S4_FPM")]
View(shortened)
write.csv(shortened,"sum_by_kegg_pathway_above_mean.csv",quote = T,row.names = F)
write.table(shortened,"sum_by_kegg_pathway_above_mean.csv", sep = "\t", quote = T,row.names = F)
write.table(shortened,"sum_by_kegg_pathway_above_mean.tab", sep = "\t", quote = T,row.names = F)
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum>mean(sum_by_kegg_pathway$sum),]
shortened<-shortened[order(shortened$sum),]
shortened<-shortened[,c("Name","S1_FPM","S2_FPM","S3_FPM","S4_FPM")]
write.table(shortened,"sum_by_kegg_pathway_above_mean.tab", sep = "\t", quote = T,row.names = F)
setwd("/Users/Scott/tophat-bacteria/scripts/R-interactive")
system(command = "./bubble.sh sum_by_kegg_pathway_above_mean.tab sum_b
system(command = "./bubble.sh sum_by_kegg_pathway_above_mean.tab sum_by_kegg_pathway")
shortened<-sum_by_kegg_pathway[sum_by_kegg_pathway$sum>mean(sum_by_kegg_pathway$sum),]
shortened<-shortened[order(shortened$sum , decreasing = T),]
shortened<-shortened[,c("Name","S1_FPM","S2_FPM","S3_FPM","S4_FPM")]
write.table(shortened,"sum_by_kegg_pathway_above_mean.tab", sep = "\t", quote = T,row.names = F)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
tlr4 <- read.delim("tlr4-pcr-data.tab")
# The purpose of this is to correlate gene expression of the bacteria
# with gene expression of the mouse host
# Specifically genes in the LPS pathway (for bacteria)
# And TLR2/4, NFk-B (for mouse host)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
#setup####
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
#for LPS pathway####
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
lowercase_lps<-data.frame(tolower(lps_path[,1]))
lps_path<-lowercase_lps
colnames(lps_path)<-"V1"
rm(lowercase_lps)
lps_genes<-data.frame(gene=lps_path[34:96,])
lps_products<-data.frame(product=lps_path[1:34,])
just_lps_products<-merge(x=sum_by_product_name,y=lps_products,by="product",all=F)
just_lps_genes<-merge(x=sum_by_gene_name,y=lps_genes,by="gene",all=F)
lps_annot=read.table("LPS_list_annotation",header = T,sep = ";",strip.white = T,quote = "")
lps_annot$product <- tolower(lps_annot$product)
just_lps_products_annot <- merge(x=lps_annot,y=just_lps_products,by="product",all.x=F,all.y=T)
tlr4 <- read.delim("tlr4-pcr-data.tab")
View(tlr4)
library(RColorBrewer)
library(reshape2)
library(tidyr)
View(just_lps_genes)
View(just_lps_products)
View(just_lps_products_annot)
View(lps_genes)
View(lps_path)
View(lps_products)
# mouse pcr expression ####
tlr4 <- read.delim("tlr4-pcr-data.tab")
order<-c('s+h-','s-h-','s+h+','s-h+')
tlr4$Series <- factor(tlr4$Series,order)
boxplot(tlr4$Values ~ tlr4$Series,col='white')
#S-h- vs. S+h-
t.test(tlr4[tlr4$Series=='s+h-',]$Values,tlr4[tlr4$Series=='s-h-',]$Values)
#S-h- vs. S+h+
t.test(tlr4[tlr4$Series=='s-h-',]$Values,tlr4[tlr4$Series=='s+h+',]$Values)
#S+h+ vs. S-h+
t.test(tlr4[tlr4$Series=='s+h+',]$Values,tlr4[tlr4$Series=='s-h+',]$Values)
#S+h- vs. S-h+
t.test(tlr4[tlr4$Series=='s+h-',]$Values,tlr4[tlr4$Series=='s-h+',]$Values)
bfrag <- data.frame(series=c('s+h-','s-h-','s+h+','s-h+'),values=c(2997.993999,4566.114029,5776.721804,6506))
bfrag$series <- factor(bfrag$series,order)
#scaling to minimum tlr4 expression
min(tlr4$Values) #0.311
min(bfrag$values) #2997.994
scale_adjust = min(tlr4$Values)-min(bfrag$values)
par(mar = c(5,5,2,5))
boxplot(tlr4$Values ~ tlr4$Series,col='white',ylab='TLR4 relative expression',xlab='Genotype (SMAD3 + or -) and Phenotype (H.hep + or -)')
par(new=T)
plot(x=c(0.5,1.5,2.5,3.5),bfrag$values+scale_adjust, type='l', col='red', axes=F, xlab=NA, ylab=NA,xlim=c(0,4))
axis(side = 4)
mtext(side = 4, line = 3, 'B.fragilis scaled counts')
legend("topleft", legend=c('B.fragilis counts','TLR4 expression'), lty=c(1,0), pch=c(NA, 22), col=c("red", "black"))
by_tlr4<-by(tlr4$Values,tlr4[,"Series"],median)
medians_tlr4<-data.frame(series=c('s+h-','s-h-','s+h+','s-h+'),values=c(by_tlr4[[1]],by_tlr4[[2]],by_tlr4[[3]],by_tlr4[[4]]))
View(medians_tlr4)
cor(medians_tlr4$values,bfrag$values,method = "p")
cor.test(medians_tlr4$values,bfrag$values,method = "p")
b_model <- lm(bfrag$values ~ medians_tlr4$values)
plot(medians_tlr4$values,bfrag$values,ylab='B.fragilis normalized counts',xlab='TLR4 relative expression')
abline(3467,238,col='blue')
legend("bottomright", legend=c('Line of regression','Correlated values', 'pvalue = 0.09862'), lty=c(1,0,0), pch=c(NA, 1,-1), col=c("blue", "black", "black"))
melted_lps <- melt(just_lps_genes)
View(melted_lps)
lm(tlr4$Values ~ melted_lps$value)
by_lps <- by(melted_lps$value,tlr4[,"variable"],median)
by_lps <- by(melted_lps$value,melted_lps[,"variable"],median)
lm(medians_tlr4$values ~ by_lps$value)
View(melted_lps)
by_lps <- by(melted_lps$value,melted_lps[,"variable"],mean)
medians_lps<-data.frame(series=c('s+h-','s-h-','s+h+','s-h+'),values=c(by_lps[[1]],by_lps[[2]],by_lps[[3]],by_lps[[4]]))
View(medians_lps)
View(medians_tlr4)
setRepositories()
ls
ls()
install.packages("ESEA")
View(medians_lps)
View(medians_tlr4)
View(medians_lps)
View(melted_lps)
medians_lps<-data.frame(series=c('s+h+','s-h+','s+h-','s-h-'),values=c(by_lps[[1]],by_lps[[2]],by_lps[[3]],by_lps[[4]]))
View(medians_lps)
View(medians_tlr4)
row.names(medians_lps)<-medians_lps$series
medians_lps<-medians_lps[c('s+h-','s-h-','s+h+','s-h+'),]
lm(medians_tlr4$values ~ medians_lps$value)
lin_model<-lm(medians_tlr4$values ~ medians_lps$value)
lin_model
plot(lin_model)
plot(medians_lps$values,medians_tlr4$values)
View(medians_lps)
View(medians_tlr4)
cor(means_lps,medians_tlr4)
melted_lps <- melt(just_lps_genes)
by_lps <- by(melted_lps$value,melted_lps[,"variable"],mean)
means_lps<-data.frame(series=c('s+h+','s-h+','s+h-','s-h-'),values=c(by_lps[[1]],by_lps[[2]],by_lps[[3]],by_lps[[4]]))
row.names(means_lps)<-means_lps$series
means_lps<-means_lps[c('s+h-','s-h-','s+h+','s-h+'),]
lin_model<-lm(medians_tlr4$values ~ means_lps$value)
plot(means_lps$values,medians_tlr4$values)
cor(means_lps,medians_tlr4)
cor(means_lps$values,medians_tlr4$values)
cor.test(means_lps$values,medians_tlr4$values)
View(means_lps)
nfkb <- read.delim("nfkb-pcr-data.tab")
order<-c('s+h-','s-h-','s+h+','s-h+')
nfkb$Series <- factor(nfkb$Series,order)
boxplot(nfkb$Values ~ nfkb$Series,col='white')
#S-h- vs. S+h-
clusterof2 <- rbind(nfkb,tlr4)
clusterof2$Series <- factor(clusterof2$Series,order)
boxplot(Values ~ Series, data = clusterof2)
#Correlation2####
by_clusterof2<-by(clusterof2$Values,clusterof2[,"Series"],median)
#by_clusterof2<-by(clusterof2$Values,clusterof2[,"Series"],mean)
by_clusterof2<-by(clusterof2$Values,clusterof2[,"Series"],median)
#by_clusterof2<-by(clusterof2$Values,clusterof2[,"Series"],mean)
medians_clusterof2<-data.frame(series=c('s+h-','s-h-','s+h+','s-h+'),values=c(by_clusterof2[[1]],by_clusterof2[[2]],by_clusterof2[[3]],by_clusterof2[[4]]))
cor(medians_clusterof2$values,means_lps$values,method = "p")
cor.test(medians_clusterof2$values,means_lps$values,method = "p")
b_model <- lm(means_lps$values ~ medians_clusterof2$values)
plot(medians_clusterof2$values,means_lps$values,ylab='B.fragilis normalized counts',xlab='TLR4+nfkb median expression')
tlr2 <- read.delim("tlr2-pcr-data.tab")
order<-c('s+h-','s-h-','s+h+','s-h+')
tlr2$Series <- factor(tlr2$Series,order)
boxplot(tlr2$Values ~ tlr2$Series,col='white')
clusterof3 <- rbind(nfkb,tlr4,tlr2)
clusterof3$Series <- factor(clusterof3$Series,order)
boxplot(Values ~ Series, data = clusterof3)
by_clusterof3<-by(clusterof3$Values,clusterof3[,"Series"],median)
#by_clusterof3<-by(clusterof3$Values,clusterof3[,"Series"],mean)
medians_clusterof3<-data.frame(series=c('s+h-','s-h-','s+h+','s-h+'),values=c(by_clusterof3[[1]],by_clusterof3[[2]],by_clusterof3[[3]],by_clusterof3[[4]]))
cor(medians_clusterof3$values,means_lps$values,method = "p")
cor.test(medians_clusterof3$values,means_lps$values,method = "p")
b_model <- lm(means_lps$values ~ medians_clusterof3$values)
plot(medians_clusterof3$values,means_lps$values,ylab='B.fragilis normalized counts',xlab='TLR4/TLR2/nfkb relative expression')
