plot.bar + geom_bar(stat="identity", col="black", size = .5)
plot.bar + facet_grid(~gene) #+ guides(fill=FALSE)
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) #+ guides(fill=FALSE)
p <- ggplot(mtcars, aes(mpg, wt)) +
geom_point()
p
p + theme(panel.background = element_rect(colour = "pink"))
p + theme_bw()
# Scatter plot of gas mileage by vehicle weight
p <- ggplot(mtcars, aes(wt, mpg)) +
geom_point()
# Calculate slope and intercept of line of best fit
coef(lm(mpg ~ wt, data = mtcars))
p + geom_abline(intercept = 37, slope = -5)
# Calculate correlation coefficient
with(mtcars, cor(wt, mpg, use = "everything", method = "pearson"))
#annotate the plot
p + geom_abline(intercept = 37, slope = -5) +
geom_text(data = data.frame(), aes(4.5, 30, label = "Pearson-R = -.87"))
# Change the axis labels
# Original plot
p
p + labs(x = "Vehicle Weight", y = "Miles per Gallon")
# Or
p + labs(x = "Vehicle Weight", y = "Miles per Gallon")
# Change title appearance
p <- p + labs(title = "Vehicle Weight-Gas Mileage Relationship")
# Set title to twice the base font size
p + theme(plot.title = element_text(size = rel(2)))
p + theme(plot.title = element_text(size = rel(2), colour = "blue"))
# Changing plot look with themes
DF <- data.frame(x = rnorm(400))
m <- ggplot(DF, aes(x = x)) +
geom_histogram()
# Default is theme_grey()
m
# Compare with
m + theme_bw()
# Manipulate Axis Attributes
m + theme(axis.line = element_line(size = 3, colour = "red", linetype = "dotted"))
m + theme(axis.text = element_text(colour = "blue"))
m + theme(axis.text.y = element_blank())
m + theme(axis.ticks = element_line(size = 2))
m + theme(axis.text = element_text(colour = "blue"))
m + theme(axis.title.y = element_text(size = rel(1.5), angle = 90))
m + theme(axis.line = element_line(size = 3, colour = "red", linetype = "dotted"))
m + theme(axis.text = element_text(colour = "blue"))
m + theme(axis.text.y = element_blank())
m + theme(axis.ticks = element_line(size = 2))
m + theme(axis.title.y = element_text(size = rel(1.5), angle = 90))
m + theme(axis.title.x = element_blank())
m + theme(axis.ticks.length = unit(.85, "cm"))
plot.bar = ggplot(data=melted, aes(x=sample, y=count, fill=genome))
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(axis.text = element_text(angle = 90)) #+ guides(fill=FALSE)
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(axis.text = element_text(angle = 45)) #+ guides(fill=FALSE)
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(axis.text.x = element_text(angle = 45)) #+ guides(fill=FALSE)
View(jlp)
tlr4 <- read.delim("tlr4-pcr-data.tab")
View(tlr4)
order<-c('s+h-','s-h-','s+h+','s-h+')
tlr4$Series <- factor(tlr4$Series,order)
colnames(jlp)
colnames(jlp)[2:5]
colnames(jlp)[2:5]<-c("S+H+ (H. hepaticus only)","S-H+ (Combined)","S+H- (Control)","S-H- (SMAD3 Knockout)")
melted<-melt(jlp)
View(melted)
order<-c("S+H- (Control)","S-H- (SMAD3 Knockout)","S+H+ (H. hepaticus only)","S-H+ (Combined)")
melted<-factor(melted,order)
?reorder
melted<-melt(jlp)
View(melted)
melted<-reorder(melted$variable,order)
melted<-reorder(melted$variable,order=order)
factor(melted$value,order)
order<-c('s+h-','s-h-','s+h+','s-h+')
factor(tlr4$Series,order)
tlr4 <- read.delim("tlr4-pcr-data.tab")
View(tlr4)
tlr4 <- read.delim("tlr4-pcr-data.tab")
View(tlr4)
tlr4$Series <- factor(tlr4$Series,order)
View(tlr4)
factor(tlr4$Series,order)
order
reorder(factor(tlr4$Series,order),tlr4$Series)
factor(tlr4$Series,order)
?factor
factor(tlr4$Series,order,ordered = T)
library(dplyr)
tlr4 %>%
mutate(Series =  factor(Series, levels = order)) %>%
arrange(Series)
tlr4 %>% mutate(Series =  factor(Series, levels = order)) %>% arrange(Series)
factor(Series, levels = order)
factor(tlr4$Series, levels = order)
arrange(tlr4$Series)
tlr4 <- read.delim("tlr4-pcr-data.tab")
order<-c('s+h-','s-h-','s+h+','s-h+')
tlr4 %>% mutate(Series =  factor(Series, levels = order)) %>% arrange(Series)
tlr4 <- tlr4 %>% mutate(Series =  factor(Series, levels = order)) %>% arrange(Series)
View(tlr4)
nfkb <- read.delim("nfkb-pcr-data.tab")
View(nfkb)
nfkb <- read.delim("nfkb-pcr-data.tab")
nfkb <- nfkb %>% mutate(Series =  factor(Series, levels = order)) %>% arrange(Series)
tlr2 <- read.delim("tlr2-pcr-data.tab")
tlr2 <- tlr2 %>% mutate(Series =  factor(Series, levels = order)) %>% arrange(Series)
#another inflammatory pathway gene in mice
irak4 <- read.delim("irak4-pcr-data.tab")
irak4 <- irak4 %>% mutate(Series =  factor(Series, levels = order)) %>% arrange(Series)
#and another
cd14 <- read.delim("CD14-pcr-data.tab")
cd14 <- cd14 %>% mutate(Series =  factor(Series, levels = order)) %>% arrange(Series)
boxplot(tlr4$Values~tlr4$Series) -> tlr4box
boxplot(tlr2$Values~tlr2$Series) -> tlr2box
boxplot(nfkb$Values~nfkb$Series) -> nfkbbox
boxplot(irak4$Values~irak4$Series) -> irak4box
boxplot(cd14$Values~cd14$Series) -> cd14box
tlr4box$stats[3,] -> medians_tlr4
tlr2box$stats[3,] -> medians_tlr2
nfkbbox$stats[3,] -> medians_nfkb
irak4box$stats[3,] -> medians_irak4
cd14box$stats[3,] -> medians_cd14
medians_pcr = data.frame(
row.names = c("nfkb","tlr2","tlr4","irak4","cd14"),
rbind(medians_nfkb,medians_tlr2,medians_tlr4,medians_irak4,
medians_cd14)
)
colnames(medians_pcr) = order
just_lps_products[just_lps_products==0]<-NA
lpsProductsNoZeroes = na.omit(just_lps_products)
row.names(lpsProductsNoZeroes) = lpsProductsNoZeroes[,'product']
lpsProductsNoZeroes = lpsProductsNoZeroes[,c('s+h-','s-h-','s+h+','s-h+')]
row.names(lpsProductsNoZeroes) = c("waaL/rfaL","lpxD","lpxC")
i=1
for (i in i:(length(medians_pcr[,1]))) {
j=1
for (j in j:(length(lpsProductsNoZeroes[,1]))) {
temp1 = as.matrix(medians_pcr[i,])
temp2 = as.matrix(lpsProductsNoZeroes[j,])
print(paste("Does",row.names(medians_pcr[i,]),"correlate with",row.names(lpsProductsNoZeroes[j,]),"?"))
print(cor.test(temp1,temp2))
}
just_lps_products[just_lps_products==0]<-NA
lpsProductsNoZeroes = na.omit(just_lps_products)
row.names(lpsProductsNoZeroes) = lpsProductsNoZeroes[,'product']
lpsProductsNoZeroes = lpsProductsNoZeroes[,c('s+h-','s-h-','s+h+','s-h+')]
row.names(lpsProductsNoZeroes) = c("waaL/rfaL","lpxD","lpxC")
# The purpose of this is to correlate gene expression of the bacteria
# with gene expression of the mouse host
# Specifically genes in the LPS pathway (for bacteria)
# And TLR2/4, NFk-B (for mouse host)
library(RColorBrewer)
library(reshape2)
library(tidyr)
library(dplyr)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
#setup####
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)<-c("product","s+h+","s-h+","s+h-","s-h-")
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)<-c("gene","s+h+","s-h+","s+h-","s-h-")
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
#for LPS pathway####
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
lowercase_lps<-data.frame(tolower(lps_path[,1]))
lps_path<-lowercase_lps
colnames(lps_path)<-"V1"
rm(lowercase_lps)
lps_genes<-data.frame(gene=lps_path[34:96,])
lps_products<-data.frame(product=lps_path[1:34,])
just_lps_products<-merge(x=sum_by_product_name,y=lps_products,by="product",all=F)
just_lps_genes<-merge(x=sum_by_gene_name,y=lps_genes,by="gene",all=F)
lps_annot=read.table("LPS_list_annotation",header = T,sep = ";",strip.white = T,quote = "")
lps_annot$product <- tolower(lps_annot$product)
just_lps_products_annot <- merge(x=lps_annot,y=just_lps_products,by="product",all.x=F,all.y=T)
source('~/tophat-bacteria/scripts/R-interactive/regression analysis and more.R')
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
library(reshape2)
library(ggplot2)
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
lps_path<-read.table("LPS_search_list",sep = "\t",comment.char = "#")
lps_genes<-data.frame(gene=lps_path[34:96,])
lowercase_lps<-data.frame(tolower(lps_path[,1]))
lps_path<-lowercase_lps
colnames(lps_path)<-"V1"
rm(lowercase_lps)
lps_products<-data.frame(product=lps_path[1:34,])
just_lps_products<-merge(x=filtered_annotated,y=lps_products,by.x="product_name",by.y="product",all=F)
just_lps_genes<-merge(x=filtered_annotated,y=lps_genes,by="gene",all=F)
jlp<-read.csv("for first graph.csv")
melted<-melt(jlp)
View(melted)
jlp<-read.csv("for second graph.csv")
colnames(jlp)[2:5]<-c("S+H+ (H. hepaticus only)","S-H+ (Combined)","S+H- (Control)","S-H- (SMAD3 Knockout)")
melted<-melt(jlp)
order<-c("S+H- (Control)","S-H- (SMAD3 Knockout)","S+H+ (H. hepaticus only)","S-H+ (Combined)")
library(dplyr)
melted <- melted %>% mutate(variable =  factor(variable, levels = x)) %>% arrange(variable)
melted <- melted %>% mutate(variable =  factor(variable, levels = order)) %>% arrange(variable)
View(melted)
jlp<-read.csv("for first graph.csv")
colnames(jlp)[2:5]<-c("S+H+ (H. hepaticus only)","S-H+ (Combined)","S+H- (Control)","S-H- (SMAD3 Knockout)")
melted<-melt(jlp)
order<-c("S+H- (Control)","S-H- (SMAD3 Knockout)","S+H+ (H. hepaticus only)","S-H+ (Combined)")
melted <- melted %>% mutate(variable =  factor(variable, levels = order)) %>% arrange(variable)
colnames(melted)<-c("product_name","gene","genome","sample","count")
melted <- with(melted, melted[order(product_name, genome, sample),])
ggplot(data=melted, aes(x=sample, y=count, fill=genome)) + geom_bar(stat="identity") + facet_grid(~gene) #+ guides(fill=FALSE)
jlp<-read.csv("for second graph.csv")
colnames(jlp)[2:5]<-c("S+H+ (H. hepaticus only)","S-H+ (Combined)","S+H- (Control)","S-H- (SMAD3 Knockout)")
melted<-melt(jlp)
order<-c("S+H- (Control)","S-H- (SMAD3 Knockout)","S+H+ (H. hepaticus only)","S-H+ (Combined)")
melted <- melted %>% mutate(variable =  factor(variable, levels = order)) %>% arrange(variable)
colnames(melted)<-c("product_name","gene","genome","sample","count")
melted <- with(melted, melted[order(product_name, genome, sample),])
plot.bar = ggplot(data=melted, aes(x=sample, y=count, fill=genome))
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(axis.text.x = element_text(angle = 45)) #+ guides(fill=FALSE)
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(axis.text.x = element_text(angle = 45, hjust = 0)) #+ guides(fill=FALSE)
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #+ guides(fill=FALSE)
colnames(melted)<-c("product_name","gene","Species / Strain","sample","Estimated Expression")
melted <- with(melted, melted[order(product_name, genome, sample),])
plot.bar = ggplot(data=melted, aes(x=sample, y=count, fill=genome))
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #+ guides(fill=FALSE)
colnames(melted)<-c("product_name","gene","Species \/ Strain","sample","Estimated Expression")
View(melted)
melted <- with(melted, melted[order(product_name, genome, sample),])
colnames(melted)<-c("product_name","gene","Species / Strain","sample","count")
melted <- with(melted, melted[order(product_name, "Species / Strain", sample),])
colnames(melted)<-c("product_name","gene","genome","sample","count")
melted <- with(melted, melted[order(product_name, genome, sample),])
plot.bar = ggplot(data=melted, aes(x=sample, y=count, fill=genome))
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #+ guides(fill=FALSE)
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #+ guides(fill=FALSE)
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=24)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #+ guides(fill=FALSE)
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #+ guides(fill=FALSE)
jlp<-read.csv("for first graph.csv")
colnames(jlp)[2:5]<-c("S+H+ (H. hepaticus only)","S-H+ (Combined)","S+H- (Control)","S-H- (SMAD3 Knockout)")
melted<-melt(jlp)
order<-c("S+H- (Control)","S-H- (SMAD3 Knockout)","S+H+ (H. hepaticus only)","S-H+ (Combined)")
melted <- melted %>% mutate(variable =  factor(variable, levels = order)) %>% arrange(variable)
colnames(melted)<-c("product_name","gene","genome","sample","count")
melted <- with(melted, melted[order(product_name, genome, sample),])
plot.bar = ggplot(data=melted, aes(x=sample, y=count, fill=genome))
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #+ guides(fill=FALSE)
jlp<-read.csv("for first graph.csv")
colnames(jlp)[2:5]<-c("S+H+ (H. hepaticus only)","S-H+ (Combined)","S+H- (Control)","S-H- (SMAD3 Knockout)")
melted<-melt(jlp)
order<-c("S+H- (Control)","S-H- (SMAD3 Knockout)","S+H+ (H. hepaticus only)","S-H+ (Combined)")
melted <- melted %>% mutate(variable =  factor(variable, levels = order)) %>% arrange(variable)
colnames(melted)<-c("product_name","gene","genome","sample","count")
melted <- with(melted, melted[order(product_name, genome, sample),])
plot.bar = ggplot(data=melted, aes(x=sample, y=count, fill=genome))
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + guides(fill=FALSE)
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #+ guides(fill=FALSE)
jlp<-read.csv("for second graph.csv")
colnames(jlp)[2:5]<-c("S+H+ (H. hepaticus only)","S-H+ (Combined)","S+H- (Control)","S-H- (SMAD3 Knockout)")
melted<-melt(jlp)
order<-c("S+H- (Control)","S-H- (SMAD3 Knockout)","S+H+ (H. hepaticus only)","S-H+ (Combined)")
melted <- melted %>% mutate(variable =  factor(variable, levels = order)) %>% arrange(variable)
colnames(melted)<-c("product_name","gene","genome","sample","count")
melted <- with(melted, melted[order(product_name, genome, sample),])
plot.bar = ggplot(data=melted, aes(x=sample, y=count, fill=genome))
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #+ guides(fill=FALSE)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
library(reshape2)
library(ggplot2)
library(dplyr)
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
genome_to_feature <- read.delim("genome-name_to_refseq-locus-tag")
polyamines<-read.table("polyamine-search-list",sep="\t",comment.char = "#")
polyamines<-data.frame(tolower(polyamines[,1]))
colnames(polyamines)<-"V1"
polyamines<-unique(polyamines)
poly_product<-data.frame(product=polyamines$V1[1:88])
poly_genes<-data.frame(gene=polyamines$V1[89:203])
just_poly_products<-merge(x=sum_by_product_name,y=poly_product,all=F)
just_poly_genes<-merge(x=sum_by_gene_name,y=poly_genes,all=F)
#getting more annotation for poly####
poly_annot<-read.table("polyamine_list_annotation",header = T,sep = ";",strip.white = T)
poly_annot$product <- tolower(poly_annot$product)
just_poly_products_annot <- merge(x=poly_annot,y=just_poly_products)
attach(just_poly_products_annot)
important<-just_poly_products_annot[ecnumber %in% c("[EC:3.5.1.53]","[EC:4.1.1.96]"),]
important2 <- merge(x=important[,1:4],y=filtered_annotated,by.x="product",by.y="product_name",all.x=T)
important <- merge(x=important2[,c(1,3,5:9)],y=genome_to_feature,by.x="tracking_id",by.y="refseq_locus_tag")
View(important)
colnames(important)[4:7]<-c("S+H+ (H. hepaticus only)","S-H+ (Combined)","S+H- (Control)","S-H- (SMAD3 Knockout)")
melted<-melt(important[,2:8])
melted <- melted %>% mutate(variable =  factor(variable, levels = order)) %>% arrange(variable)
View(melted)
order<-c("S+H- (Control)","S-H- (SMAD3 Knockout)","S+H+ (H. hepaticus only)","S-H+ (Combined)")
melted <- melted %>% mutate(variable =  factor(variable, levels = order)) %>% arrange(variable)
plot.bar = ggplot(data=melted, aes(x=Sample, y=count, fill=genome))
plot.bar + geom_bar(stat="identity") + facet_grid(~product_name) #+ guides(fill=FALSE)
plot.bar = ggplot(data=melted, aes(x=Sample, y=count, fill=genome))
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #+ guides(fill=FALSE)
View(melted)
colnames(melted)<-c("product_name","gene","genome","Sample","count")
melted <- with(melted, melted[order(product_name, genome, Sample),])
plot.bar = ggplot(data=melted, aes(x=Sample, y=count, fill=genome))
plot.bar + geom_bar(stat="identity") + facet_grid(~product_name) #+ guides(fill=FALSE)
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #+ guides(fill=FALSE)
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + guides(fill=FALSE)
detach(just_poly_products_annot)
butanoate_annot=read.table("butanoate_list_annotation",header = T,sep = ";",strip.white = T,quote = "")
butanoate_path<-data.frame(unique(butanoate_annot$product))
lowercase_butanoate<-data.frame(tolower(butanoate_path[,1]))
butanoate_path<-lowercase_butanoate
colnames(butanoate_path)<-"V1"
rm(lowercase_butanoate)
just_butanoate_products<-merge(x=sum_by_product_name,y=butanoate_path,by.x="product",by.y="V1",all=F)
butanoate_annot$product <- tolower(butanoate_annot$product)
just_butanoate_products_annot <- merge(x=butanoate_annot,y=just_butanoate_products,by="product",all.x=F,all.y=T)
attach(just_butanoate_products_annot)
colnames(important)[4:7]<-c("S+H+ (H. hepaticus only)","S-H+ (Combined)","S+H- (Control)","S-H- (SMAD3 Knockout)")
melted<-melt(important[,2:8])
order<-c("S+H- (Control)","S-H- (SMAD3 Knockout)","S+H+ (H. hepaticus only)","S-H+ (Combined)")
melted <- melted %>% mutate(variable =  factor(variable, levels = order)) %>% arrange(variable)
colnames(melted)<-c("product_name","gene","genome","Sample","count")
melted <- with(melted, melted[order(product_name, genome, Sample),])
plot.bar = ggplot(data=melted, aes(x=Sample, y=count, fill=genome))
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #+ guides(fill=FALSE)
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + guides(fill=FALSE)
View(melted)
butanoate_annot=read.table("butanoate_list_annotation",header = T,sep = ";",strip.white = T,quote = "")
detach(just_poly_products_annot)
#And now for butanoate####
butanoate_annot=read.table("butanoate_list_annotation",header = T,sep = ";",strip.white = T,quote = "")
butanoate_path<-data.frame(unique(butanoate_annot$product))
lowercase_butanoate<-data.frame(tolower(butanoate_path[,1]))
butanoate_path<-lowercase_butanoate
colnames(butanoate_path)<-"V1"
rm(lowercase_butanoate)
just_butanoate_products<-merge(x=sum_by_product_name,y=butanoate_path,by.x="product",by.y="V1",all=F)
butanoate_annot$product <- tolower(butanoate_annot$product)
just_butanoate_products_annot <- merge(x=butanoate_annot,y=just_butanoate_products,by="product",all.x=F,all.y=T)
attach(just_butanoate_products_annot)
important<-just_butanoate_products_annot[ecnumber %in% c("[EC:2.7.2.7]","[EC:2.3.1.19]"),]
important2 <- merge(x=important[,1:4],y=filtered_annotated,by.x="product",by.y="product_name",all.x=T)
important <- merge(x=important2[,c(1,3,5:9)],y=genome_to_feature,by.x="tracking_id",by.y="refseq_locus_tag")
colnames(important)[4:7]<-c("S+H+ (H. hepaticus only)","S-H+ (Combined)","S+H- (Control)","S-H- (SMAD3 Knockout)")
melted<-melt(important[,2:8])
colnames(melted)<-c("product_name","gene","genome","Sample","count")
melted <- with(melted, melted[order(product_name, genome, Sample),])
plot.bar = ggplot(data=melted, aes(x=Sample, y=count, fill=genome))
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #+ guides(fill=FALSE)
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + guides(fill=FALSE)
order<-c("S+H- (Control)","S-H- (SMAD3 Knockout)","S+H+ (H. hepaticus only)","S-H+ (Combined)")
melted <- melted %>% mutate(variable =  factor(variable, levels = order)) %>% arrange(variable)
View(melted)
melted<-melt(important[,2:8])
order<-c("S+H- (Control)","S-H- (SMAD3 Knockout)","S+H+ (H. hepaticus only)","S-H+ (Combined)")
melted <- melted %>% mutate(variable =  factor(variable, levels = order)) %>% arrange(variable)
colnames(melted)<-c("product_name","gene","genome","Sample","count")
melted <- with(melted, melted[order(product_name, genome, Sample),])
plot.bar = ggplot(data=melted, aes(x=Sample, y=count, fill=genome))
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #+ guides(fill=FALSE)
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + guides(fill=FALSE)
source('~/tophat-bacteria/scripts/R-interactive/regression analysis and more.R')
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
polyamines<-read.table("polyamine-search-list",sep="\t",comment.char = "#")
polyamines<-data.frame(tolower(polyamines[,1]))
colnames(polyamines)<-"V1"
polyamines<-unique(polyamines)
poly_product<-data.frame(product=polyamines$V1[1:88])
poly_genes<-data.frame(gene=polyamines$V1[89:203])
just_poly_products<-merge(x=sum_by_product_name,y=poly_product,all=F)
just_poly_genes<-merge(x=sum_by_gene_name,y=poly_genes,all=F)
poly_annot<-read.table("polyamine_list_annotation",header = T,sep = ";",strip.white = T)
poly_annot$product <- tolower(poly_annot$product)
just_poly_products_annot <- merge(x=poly_annot,y=just_poly_products)
View(just_poly_products_annot)
just_poly_from_excel <- read.csv("poly_products_for_kegg_figure.csv",header=T)
row.names(just_poly_from_excel)<-just_poly_from_excel$id_on_kegg
just_poly_from_excel <- data.matrix(just_poly_from_excel[,3:5])
just_poly_from_excel <- read.csv("poly_products_for_kegg_figure.csv",header=T)
View(just_poly_from_excel)
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
filtered_annotated <- read.csv("diff_exp_for_all_bact.csv")
filtered_annotated <- filtered_annotated[,2:9]
sum_by_product_name <- read.csv("sum_by_product_name.csv")
colnames(sum_by_product_name)[1]<-"product"
sum_by_product_name<-sum_by_product_name[,1:5]
sum_by_product_name$product <- tolower(sum_by_product_name$product)
sum_by_gene_name <- read.csv("sum_by_gene_name.csv")
colnames(sum_by_gene_name)[1]<-"gene"
sum_by_gene_name<-sum_by_gene_name[,1:5]
sum_by_gene_name$gene <- tolower(sum_by_gene_name$gene)
butanoate_annot=read.table("butanoate_list_annotation",header = T,sep = ";",strip.white = T,quote = "")
butanoate_path<-data.frame(unique(butanoate_annot$product))
lowercase_butanoate<-data.frame(tolower(butanoate_path[,1]))
butanoate_path<-lowercase_butanoate
colnames(butanoate_path)<-"V1"
rm(lowercase_butanoate)
just_butanoate_products<-merge(x=sum_by_product_name,y=butanoate_path,by.x="product",by.y="V1",all=F)
butanoate_annot$product <- tolower(butanoate_annot$product)
just_butanoate_products_annot <- merge(x=butanoate_annot,y=just_butanoate_products,by="product",all.x=F,all.y=T)
just_butanoate_from_excel <- read.delim("for_butanoate_heatmap.txt",header = T)
row.names(just_butanoate_from_excel)<-just_butanoate_from_excel$ecnumber
View(just_butanoate_from_excel)
source('~/tophat-bacteria/scripts/R-interactive/specific_pathway_mapping_forcuffnorm.R')
just_poly_from_excel <- read.csv("poly_products_for_kegg_figure.csv",header=T)
View(just_poly_from_excel)
source('~/tophat-bacteria/scripts/R-interactive/regression analysis and more.R')
View(medians_pcr)
source('~/tophat-bacteria/scripts/R-interactive/regression analysis and more.R')
source('~/tophat-bacteria/scripts/R-interactive/specific_pathway_mapping_forcuffnorm.R')
View(filtered_annotated)
View(just_lps_genes)
View(just_lps_products)
View(just_lps_products_annot)
View(just_poly_from_excel)
View(just_lps_from_excel)
source('~/tophat-bacteria/scripts/R-interactive/regression analysis and more.R')
source('~/tophat-bacteria/scripts/R-interactive/specific_pathway_mapping_forcuffnorm.R')
source('~/tophat-bacteria/scripts/R-interactive/species_contributions_to_genes.R')
install.packages("ggiraph")
install.packages("ggiraphExtra")
install.packages(c("acepack", "ade4", "ape", "backports", "BH", "checkmate", "chron", "colorspace", "curl", "data.table", "digest", "evaluate", "fastcluster", "ggplot2", "git2r", "Hmisc", "jsonlite", "knitr", "mgcv", "openssl", "plotrix", "proto", "Rcpp", "RcppArmadillo", "reshape", "reshape2", "rmarkdown", "RSQLite", "scales", "snow", "survival", "XML", "yaml"))
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("ggiraph", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
setwd("/Users/Scott/Google Drive/Hurwitz Lab/cuffnorm-out")
library(RColorBrewer)
library(reshape2)
library(ggplot2)
library(dplyr)
g <- ggplot(mpg, aes( x = class, tooltip = class,
data_id = class ) ) +
geom_bar_interactive()
ggiraph(code = print(g))
plot.bar = ggplot(data=melted, aes(x=Sample, y=count, fill=genome, tooltip = genome, data_id = genome))
plot.bar + geom_bar_interactive(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + guides(fill=FALSE)
plot.bar + geom_bar(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #+ guides(fill=FALSE)
plot.bar + geom_bar_interactive(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #+ guides(fill=FALSE)
plot.bar = ggplot(data=melted, aes(x=Sample, y=count, fill=genome, tooltip = genome, data_id = genome))
plot.bar + geom_bar_interactive(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + guides(fill=FALSE)
at <- data.frame( name = c( "David", "Constance", "Leonie" ),
gender = c( "Male", "Female", "Female" ),
height = c(172, 159, 71 ) )
g <- ggplot(dat, aes( x = name, y = height, tooltip = gender,
data_id = name ) ) +
geom_bar_interactive(stat = "identity")
dat <- data.frame( name = c( "David", "Constance", "Leonie" ),
gender = c( "Male", "Female", "Female" ),
height = c(172, 159, 71 ) )
g <- ggplot(dat, aes( x = name, y = height, tooltip = gender,
data_id = name ) ) +
geom_bar_interactive(stat = "identity")
ggiraph(code = print(g))
plot.bar = ggplot(data=melted, aes(x=Sample, y=count, fill=genome, tooltip = genome, data_id = genome))
plot.bar + geom_bar_interactive(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + guides(fill=FALSE)
ggiraph(code = print(g))
ggiraph(code = print(plot.bar))
plot.bar = ggplot(data=melted, aes(x=Sample, y=count, fill=genome, tooltip = genome, data_id = Sample))
plot.bar + geom_bar_interactive(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + guides(fill=FALSE)
ggiraph(code = print(plot.bar))
dat <- data.frame( name = c( "David", "Constance", "Leonie" ),
gender = c( "Male", "Female", "Female" ),
height = c(172, 159, 71 ) )
g <- ggplot(dat, aes( x = name, y = height, tooltip = gender,
data_id = name ) ) +
geom_bar_interactive(stat = "identity")
ggiraph(code = print(g))
dat <- data.frame( name = c( "David", "Constance", "Leonie" ),
gender = c( "Male", "Female", "Female" ),
height = c(172, 159, 71 ) )
g <- ggplot(dat, aes( x = name, y = height, tooltip = gender,
data_id = gender ) ) +
geom_bar_interactive(stat = "identity")
ggiraph(code = print(g))
plot.bar <- ggplot(data=melted, aes(x=Sample, y=count, fill=genome, tooltip = genome, data_id = Sample)) + geom_bar_interactive(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + guides(fill=FALSE)
ggiraph(code = print(plot.bar))
plot.bar <- ggplot(data=melted, aes(x=Sample, y=count, fill=genome, tooltip = genome, data_id = Sample)) + geom_bar_interactive(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) #+ guides(fill=FALSE)
ggiraph(code = print(plot.bar))
View(melted)
jlp<-read.csv("for first graph.csv")
colnames(jlp)[2:5]<-c("S+H+ (H. hepaticus only)","S-H+ (Combined)","S+H- (Control)","S-H- (SMAD3 Knockout)")
melted<-melt(jlp)
order<-c("S+H- (Control)","S-H- (SMAD3 Knockout)","S+H+ (H. hepaticus only)","S-H+ (Combined)")
melted <- melted %>% mutate(variable =  factor(variable, levels = order)) %>% arrange(variable)
colnames(melted)<-c("product_name","gene","genome","Sample","count")
melted <- with(melted, melted[order(product_name, genome, Sample),])
plot.bar <- ggplot(data=melted, aes(x=Sample, y=count, fill=genome, tooltip = genome, data_id = Sample)) + geom_bar_interactive(stat="identity", col="black", size = .5) + facet_grid(~gene) + theme(text = element_text(size=12)) + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + guides(fill=FALSE)
ggiraph(code = print(plot.bar))
